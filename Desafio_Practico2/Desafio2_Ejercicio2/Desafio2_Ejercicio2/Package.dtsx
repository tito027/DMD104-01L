<?xml version="1.0"?>
<DTS:Executable
  DTS:refId="Package" xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:CreatorName="LAPTOP-0LOSQ77V\Garay"
  DTS:CreatorComputerName="LAPTOP-0LOSQ77V"
  DTS:CreationDate="10/3/2020 12:16:33 PM"
  DTS:PackageType="5"
  DTS:VersionBuild="28"
  DTS:VersionGUID="{0E954996-A921-4699-84F8-27D560CBB0AA}"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="17418"
  DTS:ObjectName="Package"
  DTS:DTSID="{FB09221C-8F1F-4829-9997-FD024B0A23E0}"
  DTS:CreationName="SSIS.Package.3">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.db_imports_sugar_confectionary.sa]"
      DTS:ObjectName="localhost.db_imports_sugar_confectionary.sa"
      DTS:DTSID="{D50182DC-7FB0-49C5-842E-57B93253D44C}"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;User ID=sa;Initial Catalog=db_imports_sugar_confectionary;Persist Security Info=True;Application Name=SSIS-Package-{D50182DC-7FB0-49C5-842E-57B93253D44C}localhost.db_imports_sugar_confectionary.sa;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAn+F4cbN//0yimOadn7m1rQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACsOPP8Y6SjHMOtmk9hC4Mm7541kCU+7ypUKsGztDLy5wAAAAAOgAAAAAIAACAAAAALP5zWkke3csm76xCeizpdTOIsQ0ZAtdJf3wJVNULEFhAAAACUHytwZ8cQCbdxazVR+Rj4QAAAAFO2XP8WJX85iBrZReyMMkGOp+XQMTYPF6EnPeSGtlnv9bRWFMAqkA1K3ljKExmnh5YiUChpugkxbXwjlX+4rhg</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.db_region_mobility.sa]"
      DTS:ObjectName="localhost.db_region_mobility.sa"
      DTS:DTSID="{5FCD3713-6F99-486C-AD80-A876DFC32814}"
      DTS:CreationName="OLEDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;User ID=sa;Initial Catalog=db_region_mobility;Provider=SQLNCLI11.1;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAn+F4cbN//0yimOadn7m1rQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAC6DmgEfp75awwvXlVM0Tbg3TzBM2e/fXAwae8+RwKqwQAAAAAOgAAAAAIAACAAAAB2Nw3fRVn7Ibd8wNLicimOgctfsq+4IqO//qwiDmH6HxAAAAB/3qfdRR0Wq4ipVA2rGmhaQAAAAEQJka8vhjIobiKP4wiGHKqY+SufUGc50xjSk5Sk3EOL1T8AcA27CgBpmjMjblHlHlpQosMJZdmPVndpK/K0F5k</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.db_region_mobility.sa1]"
      DTS:ObjectName="localhost.db_region_mobility.sa1"
      DTS:DTSID="{F034D958-2AE9-4920-A4E3-9C7876A7C4A3}"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;User ID=sa;Initial Catalog=db_region_mobility;Application Name=SSIS-Package-{F034D958-2AE9-4920-A4E3-9C7876A7C4A3}localhost.db_region_mobility.sa1;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAn+F4cbN//0yimOadn7m1rQAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAPa4Y9B92Pm5cOyexESyjQQ6sQbV9Ca1kwXemjgRGG9wAAAAAOgAAAAAIAACAAAADeyK8AetZHFEhGJ9TQ1mcxlFSjBAzg0B+U3cNOb7bFNBAAAACKfvHyGcTOvIqM+w6PREc1QAAAAEhcF4zBtg5G0gNHRRJ4GNIN7aUrlg0KjnJER0hql8SlxzR8lkhbQL9GQrriVI1rTSmgFTmvtfwNtSsx5DdPAJo</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Region_Mobility_Report_Data]"
      DTS:ObjectName="Region_Mobility_Report_Data"
      DTS:DTSID="{BD5FD570-5046-4752-9C44-DBE029756857}"
      DTS:CreationName="FLATFILE">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="17418"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\Garay\Documents\UDB\Ingenieria\2020\Ciclo2\DMD\Laboratorio\DMD104-01L\Desafio_Practico2\Desafio2_Ejercicio2\Assets\2020_NI_Region_Mobility_Report.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="2"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country_region_code"
              DTS:DTSID="{EA7A90D5-934E-493A-BC6F-CBCFAA45DFCC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="country_region"
              DTS:DTSID="{E2ECD4D9-C242-4BFD-8C34-29FDBBD13296}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="sub_region_1"
              DTS:DTSID="{E8357178-39BD-4E04-980C-00AF54844499}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="sub_region_2"
              DTS:DTSID="{9A9652E6-EA1F-4730-AA7F-63652C7EF2A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="metro_area"
              DTS:DTSID="{A64CFFB9-C2E8-4413-A17A-6AD6F6933563}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="10"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="iso_3166_2_code"
              DTS:DTSID="{2921E179-83C9-4D92-A41A-02B399039C71}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="census_fips_code"
              DTS:DTSID="{FFDFE870-62FF-4A02-8F66-BF7BA1F24F56}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="date"
              DTS:DTSID="{C856A209-DBF1-4B59-B9CB-D67AAC99846E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="retail_and_recreation_percent_change_from_baseline"
              DTS:DTSID="{145EED50-7158-46EE-84F7-8A742FD07991}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="grocery_and_pharmacy_percent_change_from_baseline"
              DTS:DTSID="{446FF35A-1CA5-4543-8367-A34C01E7D2B2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="parks_percent_change_from_baseline"
              DTS:DTSID="{5163F47D-39C4-4CC2-A9E9-815B3E9E97F4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="transit_stations_percent_change_from_baseline"
              DTS:DTSID="{6165E5EA-668D-45F4-B8FC-6321C6C58611}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="workplaces_percent_change_from_baseline"
              DTS:DTSID="{8C8E4500-7235-4825-A008-C86CFC1FB0C4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="residential_percent_change_from_baseline"
              DTS:DTSID="{A272D905-D3F0-4AA3-85AE-F45656CA9196}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Get Data from CSV - ETL"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Data from CSV - ETL"
      DTS:DTSID="{60103794-7AAE-412F-8A06-37486ABF5C1F}"
      DTS:Description="Data Flow Task"
      DTS:CreationName="SSIS.Pipeline.3">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get Data from CSV - ETL\Country table"
              name="Country table"
              componentClassID="{EC139FBC-694E-490B-8EA7-35690FB0F445}"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Country table.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Country table.Outputs[Multicast Output 1]"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Country table.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Country table.Outputs[Multicast Output 3]"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get Data from CSV - ETL\Country table.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Country table.Outputs[Multicast Output 2]"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get Data from CSV - ETL\Country table.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true"
                  dangling="true">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\CountryTable_db"
              name="CountryTable_db"
              componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
              description="OLE DB Destination"
              usesDispositions="true"
              version="4"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4">
              <properties>
                <property
                  name="CommandTimeout"
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                <property
                  name="OpenRowset"
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset.">[dbo].[Dim_Region_Country]</property>
                <property
                  name="OpenRowsetVariable"
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."></property>
                <property
                  name="SqlCommand"
                  dataType="System.String"
                  description="The SQL command to be executed."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="DefaultCodePage"
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                <property
                  name="AlwaysUseDefaultCodePage"
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data.">false</property>
                <property
                  name="AccessMode"
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  typeConverter="AccessMode">0</property>
                <property
                  name="FastLoadKeepIdentity"
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on.">false</property>
                <property
                  name="FastLoadKeepNulls"
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on.">false</property>
                <property
                  name="FastLoadOptions"
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."></property>
                <property
                  name="FastLoadMaxInsertCommitSize"
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on.">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Data from CSV - ETL\CountryTable_db.Connections[OleDbConnection]"
                  name="OleDbConnection"
                  description="The OLE DB runtime connection used to access the database."
                  connectionManagerID="Package.ConnectionManagers[localhost.db_region_mobility.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.db_region_mobility.sa]" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input]"
                  name="OLE DB Destination Input"
                  hasSideEffects="true"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].ExternalColumns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].ExternalColumns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].Columns[id_country]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for country table.Outputs[Output 0].Columns[id_country]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      cachedName="id_country"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      name="id"
                      dataType="guid" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].ExternalColumns[country_region_code]"
                      name="country_region_code"
                      dataType="str"
                      length="2"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input].ExternalColumns[country_region]"
                      name="country_region"
                      dataType="str"
                      length="100"
                      codePage="1252" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\CountryTable_db.Outputs[OLE DB Destination Error Output]"
                  name="OLE DB Destination Error Output"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input]"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\CountryTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\CountryTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\CountryTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Data Conversion 1"
              name="Data Conversion 1"
              componentClassID="{62B1106C-7DB8-4EC8-ADD6-4C664DFFC54A}"
              description="Data Conversion"
              usesDispositions="true"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input].Columns[retail_and_recreation_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[retail_and_recreation_percent_change_from_baseline]"
                      cachedName="retail_and_recreation_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      cachedName="grocery_and_pharmacy_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input].Columns[parks_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[parks_percent_change_from_baseline]"
                      cachedName="parks_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input].Columns[transit_stations_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[transit_stations_percent_change_from_baseline]"
                      cachedName="transit_stations_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input].Columns[workplaces_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[workplaces_percent_change_from_baseline]"
                      cachedName="workplaces_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input].Columns[residential_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[residential_percent_change_from_baseline]"
                      cachedName="residential_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output]"
                  name="Data Conversion Output"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      name="Copy of retail_and_recreation_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="SourceInputColumnLineageID"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[retail_and_recreation_percent_change_from_baseline]}</property>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      name="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="SourceInputColumnLineageID"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]}</property>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of parks_percent_change_from_baseline]"
                      name="Copy of parks_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of parks_percent_change_from_baseline]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="SourceInputColumnLineageID"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[parks_percent_change_from_baseline]}</property>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      name="Copy of transit_stations_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="SourceInputColumnLineageID"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[transit_stations_percent_change_from_baseline]}</property>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      name="Copy of workplaces_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="SourceInputColumnLineageID"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[workplaces_percent_change_from_baseline]}</property>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of residential_percent_change_from_baseline]"
                      name="Copy of residential_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of residential_percent_change_from_baseline]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="SourceInputColumnLineageID"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[residential_percent_change_from_baseline]}</property>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  name="Data Conversion Error Output"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input]"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Date data"
              name="Date data"
              componentClassID="{EC139FBC-694E-490B-8EA7-35690FB0F445}"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Date data.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Date data.Outputs[Multicast Output 1]"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Date data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Date data.Outputs[Multicast Output 2]"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get Data from CSV - ETL\Date data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Date data.Outputs[Multicast Output 3]"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get Data from CSV - ETL\Date data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true"
                  dangling="true">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\DateTable_db"
              name="DateTable_db"
              componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
              description="OLE DB Destination"
              usesDispositions="true"
              version="4"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4">
              <properties>
                <property
                  name="CommandTimeout"
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                <property
                  name="OpenRowset"
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset.">[dbo].[Dim_Date]</property>
                <property
                  name="OpenRowsetVariable"
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."></property>
                <property
                  name="SqlCommand"
                  dataType="System.String"
                  description="The SQL command to be executed."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="DefaultCodePage"
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                <property
                  name="AlwaysUseDefaultCodePage"
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data.">false</property>
                <property
                  name="AccessMode"
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  typeConverter="AccessMode">0</property>
                <property
                  name="FastLoadKeepIdentity"
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on.">false</property>
                <property
                  name="FastLoadKeepNulls"
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on.">false</property>
                <property
                  name="FastLoadOptions"
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."></property>
                <property
                  name="FastLoadMaxInsertCommitSize"
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on.">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Data from CSV - ETL\DateTable_db.Connections[OleDbConnection]"
                  name="OleDbConnection"
                  description="The OLE DB runtime connection used to access the database."
                  connectionManagerID="Package.ConnectionManagers[localhost.db_region_mobility.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.db_region_mobility.sa]" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input]"
                  name="OLE DB Destination Input"
                  hasSideEffects="true"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].Columns[day]"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[day]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[day]"
                      cachedName="day"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].Columns[month]"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[month]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      cachedName="month"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].Columns[year]"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[year]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      cachedName="year"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].Columns[id_date]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for every date.Outputs[Output 0].Columns[id_date]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      cachedName="id_date"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      name="id"
                      dataType="guid" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[day]"
                      name="day"
                      dataType="i4" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      name="month"
                      dataType="i4" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      name="year"
                      dataType="i4" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\DateTable_db.Outputs[OLE DB Destination Error Output]"
                  name="OLE DB Destination Error Output"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input]"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\DateTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\DateTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\DateTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\FactTable_db"
              name="FactTable_db"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              usesDispositions="true"
              version="2"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2">
              <properties>
                <property
                  name="TableOrViewName"
                  dataType="System.String"
                  description="The Destination database table name."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version= 11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  expressionType="Notify">"dbo"."Fact_Percentage"</property>
                <property
                  name="BatchSize"
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify">0</property>
                <property
                  name="CommandTimeout"
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify">30</property>
                <property
                  name="UseBulkInsertWhenPossible"
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify">true</property>
                <property
                  name="UserComponentTypeName"
                  dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ADONETDestination, Microsoft.SqlServer.ADONETDest, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Data from CSV - ETL\FactTable_db.Connections[IDbConnection]"
                  name="IDbConnection"
                  description="Managed connection manager"
                  connectionManagerID="Package.ConnectionManagers[localhost.db_region_mobility.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.db_region_mobility.sa1]" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input]"
                  name="ADO NET Destination Input"
                  hasSideEffects="true"
                  errorRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                      cachedName="id"
                      cachedDataType="guid"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id_region]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[id_date]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id_date]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id_date]"
                      cachedName="id_date"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[Copy of residential_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of residential_percent_change_from_baseline]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[residential_percent_change_from_baseline]"
                      cachedName="Copy of residential_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[Copy of workplaces_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[workplaces_percent_change_from_baseline]"
                      cachedName="Copy of workplaces_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[transit_stations_percent_change_from_baseline]"
                      cachedName="Copy of transit_stations_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[Copy of parks_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of parks_percent_change_from_baseline]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[parks_percent_change_from_baseline]"
                      cachedName="Copy of parks_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[grocery_and_pharmacy_percent_change_from_baseline]"
                      cachedName="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[retail_and_recreation_percent_change_from_baseline]"
                      cachedName="Copy of retail_and_recreation_percent_change_from_baseline"
                      cachedDataType="i4" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                      name="id"
                      dataType="guid" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id_region]"
                      name="id_region"
                      dataType="guid" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id_date]"
                      name="id_date"
                      dataType="guid" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[retail_and_recreation_percent_change_from_baseline]"
                      name="retail_and_recreation_percent_change_from_baseline"
                      dataType="i4" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[grocery_and_pharmacy_percent_change_from_baseline]"
                      name="grocery_and_pharmacy_percent_change_from_baseline"
                      dataType="i4" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[parks_percent_change_from_baseline]"
                      name="parks_percent_change_from_baseline"
                      dataType="i4" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[transit_stations_percent_change_from_baseline]"
                      name="transit_stations_percent_change_from_baseline"
                      dataType="i4" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[workplaces_percent_change_from_baseline]"
                      name="workplaces_percent_change_from_baseline"
                      dataType="i4" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input].ExternalColumns[residential_percent_change_from_baseline]"
                      name="residential_percent_change_from_baseline"
                      dataType="i4" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\FactTable_db.Outputs[ADO NET Destination Error Output]"
                  name="ADO NET Destination Error Output"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input]"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\FactTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\FactTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\FactTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\fact_table"
              name="fact_table"
              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              version="1"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="JoinType"
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  typeConverter="JoinType">2</property>
                <property
                  name="NumKeyColumns"
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key.">1</property>
                <property
                  name="TreatNullsAsEqual"
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values.">true</property>
                <property
                  name="MaxBuffersPerInput"
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking.">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input]"
                  name="Merge Join Left Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of residential_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of residential_percent_change_from_baseline]"
                      cachedName="Copy of residential_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of workplaces_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      cachedName="Copy of workplaces_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      cachedName="Copy of transit_stations_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of parks_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of parks_percent_change_from_baseline]"
                      cachedName="Copy of parks_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      cachedName="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      cachedName="Copy of retail_and_recreation_percent_change_from_baseline"
                      cachedDataType="i4" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Right Input]"
                  name="Merge Join Right Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Right Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Right Input].Columns[id_date]"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output].Columns[id_date]"
                      cachedName="id_date"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output]"
                  name="Merge Join Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id]"
                      dataType="guid"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id_date]"
                      name="id_date"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[id_date]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Right Input].Columns[id_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of residential_percent_change_from_baseline]"
                      name="Copy of residential_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of residential_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of residential_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      name="Copy of workplaces_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of workplaces_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      name="Copy of transit_stations_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of transit_stations_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of parks_percent_change_from_baseline]"
                      name="Copy of parks_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of parks_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of parks_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      name="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      name="Copy of retail_and_recreation_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input].Columns[Copy of retail_and_recreation_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Flat File Source"
              name="Flat File Source"
              componentClassID="{D23FD76B-F51D-420F-BBCB-19CBF6AC1AB4}"
              description="Flat File Source"
              localeId="17418"
              usesDispositions="true"
              version="1"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="RetainNulls"
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null.">true</property>
                <property
                  name="FileNameColumnName"
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Data from CSV - ETL\Flat File Source.Connections[FlatFileConnection]"
                  name="FlatFileConnection"
                  connectionManagerID="Package.ConnectionManagers[Region_Mobility_Report_Data]"
                  connectionManagerRefId="Package.ConnectionManagers[Region_Mobility_Report_Data]" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[country_region_code]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[country_region]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[sub_region_1]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[sub_region_2]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[metro_area]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[iso_3166_2_code]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[census_fips_code]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]"
                      name="date"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[date]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[retail_and_recreation_percent_change_from_baseline]"
                      name="retail_and_recreation_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[retail_and_recreation_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[retail_and_recreation_percent_change_from_baseline]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      name="grocery_and_pharmacy_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[grocery_and_pharmacy_percent_change_from_baseline]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[parks_percent_change_from_baseline]"
                      name="parks_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[parks_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[parks_percent_change_from_baseline]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[transit_stations_percent_change_from_baseline]"
                      name="transit_stations_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[transit_stations_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[transit_stations_percent_change_from_baseline]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[workplaces_percent_change_from_baseline]"
                      name="workplaces_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[workplaces_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[workplaces_percent_change_from_baseline]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[residential_percent_change_from_baseline]"
                      name="residential_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[residential_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[residential_percent_change_from_baseline]">
                      <properties>
                        <property
                          name="FastParse"
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines.">false</property>
                        <property
                          name="UseBinaryFormat"
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format.">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[country_region_code]"
                      name="country_region_code"
                      dataType="str"
                      length="2"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[country_region]"
                      name="country_region"
                      dataType="str"
                      length="50"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[sub_region_1]"
                      name="sub_region_1"
                      dataType="str"
                      length="100"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[sub_region_2]"
                      name="sub_region_2"
                      dataType="str"
                      length="100"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[metro_area]"
                      name="metro_area"
                      dataType="str"
                      length="100"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      dataType="str"
                      length="10"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[census_fips_code]"
                      name="census_fips_code"
                      dataType="str"
                      length="20"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[date]"
                      name="date"
                      dataType="date" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[retail_and_recreation_percent_change_from_baseline]"
                      name="retail_and_recreation_percent_change_from_baseline"
                      dataType="str"
                      length="50"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[grocery_and_pharmacy_percent_change_from_baseline]"
                      name="grocery_and_pharmacy_percent_change_from_baseline"
                      dataType="str"
                      length="50"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[parks_percent_change_from_baseline]"
                      name="parks_percent_change_from_baseline"
                      dataType="str"
                      length="50"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[transit_stations_percent_change_from_baseline]"
                      name="transit_stations_percent_change_from_baseline"
                      dataType="str"
                      length="50"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[workplaces_percent_change_from_baseline]"
                      name="workplaces_percent_change_from_baseline"
                      dataType="str"
                      length="50"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[residential_percent_change_from_baseline]"
                      name="residential_percent_change_from_baseline"
                      dataType="str"
                      length="50"
                      codePage="1252" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Error Output]"
                  name="Flat File Source Error Output"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      dataType="text"
                      codePage="1252" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Get Country Table"
              name="Get Country Table"
              componentClassID="{5B201335-B360-485C-BB93-75C34E09B3D3}"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              version="3"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3">
              <properties>
                <property
                  name="KeyScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="Keys"
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                <property
                  name="CountDistinctScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="CountDistinctKeys"
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence." />
                <property
                  name="AutoExtendFactor"
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100.">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Get Country Table.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Country Table.Inputs[Aggregate Input 1].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Country Table.Inputs[Aggregate Input 1].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      name="KeyScale"
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      typeConverter="KeyScaleType">0</property>
                    <property
                      name="Keys"
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Get Date Dimension"
              name="Get Date Dimension"
              componentClassID="{5B201335-B360-485C-BB93-75C34E09B3D3}"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              version="3"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3">
              <properties>
                <property
                  name="KeyScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="Keys"
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                <property
                  name="CountDistinctScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="CountDistinctKeys"
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence." />
                <property
                  name="AutoExtendFactor"
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100.">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Get Date Dimension.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Date Dimension.Inputs[Aggregate Input 1].Columns[date]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]"
                      cachedName="date"
                      cachedDataType="date" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      name="KeyScale"
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      typeConverter="KeyScaleType">0</property>
                    <property
                      name="Keys"
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]"
                      name="date"
                      lineageId="Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]"
                      dataType="date">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Get Region Dimension"
              name="Get Region Dimension"
              componentClassID="{5B201335-B360-485C-BB93-75C34E09B3D3}"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              version="3"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3">
              <properties>
                <property
                  name="KeyScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="Keys"
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                <property
                  name="CountDistinctScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="CountDistinctKeys"
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence." />
                <property
                  name="AutoExtendFactor"
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100.">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      name="KeyScale"
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      typeConverter="KeyScaleType">0</property>
                    <property
                      name="Keys"
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Get Subregion Data"
              name="Get Subregion Data"
              componentClassID="{5B201335-B360-485C-BB93-75C34E09B3D3}"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              version="3"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3">
              <properties>
                <property
                  name="KeyScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="Keys"
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                <property
                  name="CountDistinctScale"
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  typeConverter="KeyScaleType">0</property>
                <property
                  name="CountDistinctKeys"
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence." />
                <property
                  name="AutoExtendFactor"
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100.">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Get Subregion Data.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Inputs[Aggregate Input 1].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Inputs[Aggregate Input 1].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Inputs[Aggregate Input 1].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Inputs[Aggregate Input 1].Columns[id_country]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[id_country]"
                      cachedName="id_country"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      name="KeyScale"
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      typeConverter="KeyScaleType">0</property>
                    <property
                      name="Keys"
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence." />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_1]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_2]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[metro_area]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[id_country]"
                      name="id_country"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[id_country]"
                      dataType="guid">
                      <properties>
                        <property
                          name="AggregationColumnId"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[id_country]}</property>
                        <property
                          name="AggregationType"
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          typeConverter="AggregationType">0</property>
                        <property
                          name="IsBig"
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type.">1</property>
                        <property
                          name="AggregationComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the string comparison options.">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Merge Join"
              name="Merge Join"
              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              version="1"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="JoinType"
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  typeConverter="JoinType">2</property>
                <property
                  name="NumKeyColumns"
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key.">1</property>
                <property
                  name="TreatNullsAsEqual"
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values.">true</property>
                <property
                  name="MaxBuffersPerInput"
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking.">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Left Input]"
                  name="Merge Join Left Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Left Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Left Input].Columns[id_country]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[id_country]"
                      cachedName="id_country"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input]"
                  name="Merge Join Right Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output]"
                  name="Merge Join Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[country_region_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[country_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[sub_region_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[sub_region_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[iso_3166_2_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[census_fips_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[id_country]"
                      name="id_country"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output].Columns[id_country]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Left Input].Columns[id_country]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Merge Join 1"
              name="Merge Join 1"
              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              version="1"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="JoinType"
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  typeConverter="JoinType">2</property>
                <property
                  name="NumKeyColumns"
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key.">3</property>
                <property
                  name="TreatNullsAsEqual"
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values.">true</property>
                <property
                  name="MaxBuffersPerInput"
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking.">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input]"
                  name="Merge Join Left Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="2" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="3" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Right Input]"
                  name="Merge Join Right Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Right Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Right Input].Columns[id_subregion]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[id_subregion]"
                      cachedName="id_subregion"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Right Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="2" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Right Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="3" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_subregion]"
                      name="id_subregion"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_subregion]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Right Input].Columns[id_subregion]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[iso_3166_2_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[census_fips_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Merge Join 2"
              name="Merge Join 2"
              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              version="1"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="JoinType"
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  typeConverter="JoinType">2</property>
                <property
                  name="NumKeyColumns"
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key.">3</property>
                <property
                  name="TreatNullsAsEqual"
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values.">true</property>
                <property
                  name="MaxBuffersPerInput"
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking.">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input]"
                  name="Merge Join Left Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      cachedName="Copy of retail_and_recreation_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      cachedName="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of parks_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of parks_percent_change_from_baseline]"
                      cachedName="Copy of parks_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      cachedName="Copy of transit_stations_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of workplaces_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      cachedName="Copy of workplaces_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of residential_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of residential_percent_change_from_baseline]"
                      cachedName="Copy of residential_percent_change_from_baseline"
                      cachedDataType="i4" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="2" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="3" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input]"
                  name="Merge Join Right Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="2" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252"
                      cachedSortKeyPosition="3" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      name="Copy of retail_and_recreation_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of retail_and_recreation_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      name="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of parks_percent_change_from_baseline]"
                      name="Copy of parks_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of parks_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of parks_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      name="Copy of transit_stations_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of transit_stations_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      name="Copy of workplaces_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of workplaces_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of residential_percent_change_from_baseline]"
                      name="Copy of residential_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of residential_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input].Columns[Copy of residential_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Merge Join 3"
              name="Merge Join 3"
              componentClassID="{14D43A4F-D7BD-489D-829E-6DE35750CFE4}"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              version="1"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="JoinType"
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  typeConverter="JoinType">2</property>
                <property
                  name="NumKeyColumns"
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key.">1</property>
                <property
                  name="TreatNullsAsEqual"
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values.">true</property>
                <property
                  name="MaxBuffersPerInput"
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking.">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Left Input]"
                  name="Merge Join Left Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Left Input].Columns[date]"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[date]"
                      cachedName="date"
                      cachedDataType="date"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Left Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Right Input]"
                  name="Merge Join Right Input"
                  hasSideEffects="true">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Right Input].Columns[date]"
                      lineageId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[date]"
                      cachedName="date"
                      cachedDataType="date"
                      cachedSortKeyPosition="1" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Right Input].Columns[id_date]"
                      lineageId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[id_date]"
                      cachedName="id_date"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output]"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id_date]"
                      name="id_date"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id_date]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Right Input].Columns[id_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id]"
                      dataType="guid">
                      <properties>
                        <property
                          name="InputColumnID"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Left Input].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Multicast"
              name="Multicast"
              componentClassID="{EC139FBC-694E-490B-8EA7-35690FB0F445}"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Multicast.Outputs[Multicast Output 2]"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get Data from CSV - ETL\Multicast.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Multicast.Outputs[Multicast Output 3]"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get Data from CSV - ETL\Multicast.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Multicast.Outputs[Multicast Output 1]"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Multicast.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true"
                  dangling="true">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by country 1"
              name="Order by country 1"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by country 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 1.Inputs[Sort Input].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 1.Inputs[Sort Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 1.Inputs[Sort Input].Columns[id_country]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for country table.Outputs[Output 0].Columns[id_country]"
                      cachedName="id_country"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1].Columns[country_region_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[id_country]"
                      name="id_country"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output].Columns[id_country]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Set uid for country table.Outputs[Output 0].Columns[id_country]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by country 2"
              name="Order by country 2"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[iso_3166_2_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[census_fips_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by date 2"
              name="Order by date 2"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by date 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Inputs[Sort Input].Columns[date]"
                      lineageId="Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]"
                      cachedName="date"
                      cachedDataType="date">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Inputs[Sort Input].Columns[id_date]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for every date.Outputs[Output 0].Columns[id_date]"
                      cachedName="id_date"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Inputs[Sort Input].Columns[day]"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[day]"
                      cachedName="day"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Inputs[Sort Input].Columns[month]"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[month]"
                      cachedName="month"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Inputs[Sort Input].Columns[year]"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[year]"
                      cachedName="year"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[date]"
                      name="date"
                      lineageId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[date]"
                      dataType="date"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[id_date]"
                      name="id_date"
                      lineageId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[id_date]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Set uid for every date.Outputs[Output 0].Columns[id_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[day]"
                      name="day"
                      lineageId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[day]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[day]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[month]"
                      name="month"
                      lineageId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[month]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[month]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[year]"
                      name="year"
                      lineageId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output].Columns[year]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[year]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by id 1"
              name="Order by id 1"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      cachedName="Copy of retail_and_recreation_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      cachedName="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[Copy of parks_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of parks_percent_change_from_baseline]"
                      cachedName="Copy of parks_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      cachedName="Copy of transit_stations_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[Copy of workplaces_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      cachedName="Copy of workplaces_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input].Columns[Copy of residential_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of residential_percent_change_from_baseline]"
                      cachedName="Copy of residential_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[id]"
                      dataType="guid"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      name="Copy of retail_and_recreation_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      name="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of parks_percent_change_from_baseline]"
                      name="Copy of parks_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of parks_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of parks_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      name="Copy of transit_stations_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of transit_stations_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      name="Copy of workplaces_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of workplaces_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of residential_percent_change_from_baseline]"
                      name="Copy of residential_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output].Columns[Copy of residential_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output].Columns[Copy of residential_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by id 2"
              name="Order by id 2"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by id 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 2.Inputs[Sort Input].Columns[id_date]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id_date]"
                      cachedName="id_date"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 2.Inputs[Sort Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output].Columns[id_date]"
                      name="id_date"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output].Columns[id_date]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output].Columns[id]"
                      dataType="guid"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by iso 1"
              name="Order by iso 1"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[date]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]"
                      cachedName="date"
                      cachedDataType="date">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      cachedName="Copy of retail_and_recreation_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      cachedName="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[Copy of parks_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of parks_percent_change_from_baseline]"
                      cachedName="Copy of parks_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      cachedName="Copy of transit_stations_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[Copy of workplaces_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      cachedName="Copy of workplaces_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input].Columns[Copy of residential_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of residential_percent_change_from_baseline]"
                      cachedName="Copy of residential_percent_change_from_baseline"
                      cachedDataType="i4">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[date]"
                      name="date"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[date]"
                      dataType="date">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[id]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      name="Copy of retail_and_recreation_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of retail_and_recreation_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      name="Copy of grocery_and_pharmacy_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of grocery_and_pharmacy_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of parks_percent_change_from_baseline]"
                      name="Copy of parks_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of parks_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of parks_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      name="Copy of transit_stations_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of transit_stations_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of transit_stations_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      name="Copy of workplaces_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of workplaces_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of workplaces_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of residential_percent_change_from_baseline]"
                      name="Copy of residential_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output].Columns[Copy of residential_percent_change_from_baseline]"
                      dataType="i4">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of residential_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by iso 2"
              name="Order by iso 2"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by iso 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Inputs[Sort Input].Columns[id_subregion]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_subregion]"
                      cachedName="id_subregion"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Inputs[Sort Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Inputs[Sort Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Inputs[Sort Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Inputs[Sort Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">3</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[id_subregion]"
                      name="id_subregion"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[id_subregion]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_subregion]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[iso_3166_2_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[census_fips_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by subregion 1"
              name="Order by subregion 1"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0].Columns[id_region]"
                      cachedName="id_region"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[country_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[sub_region_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[iso_3166_2_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1].Columns[census_fips_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output].Columns[id_region]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0].Columns[id_region]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Order by subregion 2"
              name="Order by subregion 2"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Order by subregion 2.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Inputs[Sort Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Inputs[Sort Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Inputs[Sort Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Inputs[Sort Input].Columns[id_country]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[id_country]"
                      cachedName="id_country"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Inputs[Sort Input].Columns[id_subregion]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for subregion.Outputs[Output 0].Columns[id_subregion]"
                      cachedName="id_subregion"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[id_country]"
                      name="id_country"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[id_country]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[id_country]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[id_subregion]"
                      name="id_subregion"
                      lineageId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output].Columns[id_subregion]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Set uid for subregion.Outputs[Output 0].Columns[id_subregion]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Ordery by date 1"
              name="Ordery by date 1"
              componentClassID="{5B1A3FF5-D366-4D75-AD1F-F19A36FCBEDB}"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              version="1"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1">
              <properties>
                <property
                  name="EliminateDuplicates"
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values.">false</property>
                <property
                  name="MaximumThreads"
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[country_region_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]"
                      cachedName="country_region_code"
                      cachedDataType="str"
                      cachedLength="2"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[country_region]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]"
                      cachedName="country_region"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[date]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]"
                      cachedName="date"
                      cachedDataType="date">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[retail_and_recreation_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[retail_and_recreation_percent_change_from_baseline]"
                      cachedName="retail_and_recreation_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      cachedName="grocery_and_pharmacy_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[parks_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[parks_percent_change_from_baseline]"
                      cachedName="parks_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[transit_stations_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[transit_stations_percent_change_from_baseline]"
                      cachedName="transit_stations_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[workplaces_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[workplaces_percent_change_from_baseline]"
                      cachedName="workplaces_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[residential_percent_change_from_baseline]"
                      lineageId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[residential_percent_change_from_baseline]"
                      cachedName="residential_percent_change_from_baseline"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedCodepage="1252">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input].Columns[id]"
                      lineageId="Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0].Columns[id]"
                      cachedName="id"
                      cachedDataType="guid">
                      <properties>
                        <property
                          name="NewComparisonFlags"
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data.">0</property>
                        <property
                          name="NewSortKeyPosition"
                          dataType="System.Int32"
                          description="Specifies the sort order of the column.">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output]"
                  name="Sort Output"
                  isSorted="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[country_region_code]"
                      name="country_region_code"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[country_region_code]"
                      length="2"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[country_region]"
                      name="country_region"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[country_region]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[country_region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[sub_region_1]"
                      name="sub_region_1"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[sub_region_1]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_1]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[sub_region_2]"
                      name="sub_region_2"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[sub_region_2]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[sub_region_2]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[metro_area]"
                      name="metro_area"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[metro_area]"
                      length="100"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[metro_area]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[iso_3166_2_code]"
                      length="10"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[iso_3166_2_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[census_fips_code]"
                      name="census_fips_code"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[census_fips_code]"
                      length="20"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[census_fips_code]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[date]"
                      name="date"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[date]"
                      dataType="date"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[retail_and_recreation_percent_change_from_baseline]"
                      name="retail_and_recreation_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[retail_and_recreation_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[retail_and_recreation_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      name="grocery_and_pharmacy_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[grocery_and_pharmacy_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[parks_percent_change_from_baseline]"
                      name="parks_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[parks_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[parks_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[transit_stations_percent_change_from_baseline]"
                      name="transit_stations_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[transit_stations_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[transit_stations_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[workplaces_percent_change_from_baseline]"
                      name="workplaces_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[workplaces_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[workplaces_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[residential_percent_change_from_baseline]"
                      name="residential_percent_change_from_baseline"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[residential_percent_change_from_baseline]"
                      length="50"
                      dataType="str"
                      codePage="1252">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output].Columns[residential_percent_change_from_baseline]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output].Columns[id]"
                      dataType="guid">
                      <properties>
                        <property
                          name="SortColumnId"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          containsID="true">#{Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Raw Data"
              name="Raw Data"
              componentClassID="{EC139FBC-694E-490B-8EA7-35690FB0F445}"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Raw Data.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 2]"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get Data from CSV - ETL\Raw Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 1]"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Raw Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 3]"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get Data from CSV - ETL\Raw Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 4]"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Get Data from CSV - ETL\Raw Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 5]"
                  name="Multicast Output 5"
                  synchronousInputId="Package\Get Data from CSV - ETL\Raw Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true"
                  dangling="true">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Region's Data"
              name="Region's Data"
              componentClassID="{EC139FBC-694E-490B-8EA7-35690FB0F445}"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Region's Data.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Region's Data.Outputs[Multicast Output 1]"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Region's Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Region's Data.Outputs[Multicast Output 4]"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Get Data from CSV - ETL\Region's Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Region's Data.Outputs[Multicast Output 3]"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get Data from CSV - ETL\Region's Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Region's Data.Outputs[Multicast Output 2]"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get Data from CSV - ETL\Region's Data.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true"
                  dangling="true">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\RegionTable_db"
              name="RegionTable_db"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination."
              usesDispositions="true"
              version="2"
              contactInfo="Loads data into an ADO.NET-compliant database that uses a database table or view. Load data into a new or existing table. For example, use an ADO.NET provider for ODBC to load data into an ODBC destination.;Microsoft Corporation; Microsoft SQL Server; © Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2">
              <properties>
                <property
                  name="TableOrViewName"
                  dataType="System.String"
                  description="The Destination database table name."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version= 11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  expressionType="Notify">"dbo"."Dim_Region"</property>
                <property
                  name="BatchSize"
                  dataType="System.Int32"
                  description="Specify the number of rows per batch. The default is 0 which uses the same size as SSIS internal buffer. "
                  expressionType="Notify">0</property>
                <property
                  name="CommandTimeout"
                  dataType="System.Int32"
                  description="The number of seconds before a command times out. A value of 0 indicates infinite time-out. "
                  expressionType="Notify">30</property>
                <property
                  name="UseBulkInsertWhenPossible"
                  dataType="System.Boolean"
                  description="Specifies whether to use the SqlBulkCopy interface to improve the performance of bulk insert operations. Only certain providers support this interface."
                  expressionType="Notify">false</property>
                <property
                  name="UserComponentTypeName"
                  dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ADONETDestination, Microsoft.SqlServer.ADONETDest, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Data from CSV - ETL\RegionTable_db.Connections[IDbConnection]"
                  name="IDbConnection"
                  description="Managed connection manager"
                  connectionManagerID="Package.ConnectionManagers[localhost.db_region_mobility.sa1]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.db_region_mobility.sa1]" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input]"
                  name="ADO NET Destination Input"
                  hasSideEffects="true"
                  errorRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].Columns[id_subregion]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_subregion]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id_subregion]"
                      cachedName="id_subregion"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].Columns[iso_3166_2_code]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[iso_3166_2_code]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[iso_3166_2_code]"
                      cachedName="iso_3166_2_code"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].Columns[census_fips_code]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[census_fips_code]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[census_fips_code]"
                      cachedName="census_fips_code"
                      cachedDataType="str"
                      cachedLength="20"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].Columns[id_region]"
                      lineageId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output].Columns[id_region]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                      cachedName="id_region"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id]"
                      name="id"
                      dataType="guid" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[iso_3166_2_code]"
                      name="iso_3166_2_code"
                      dataType="wstr"
                      length="10" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[census_fips_code]"
                      name="census_fips_code"
                      dataType="wstr"
                      length="20" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input].ExternalColumns[id_subregion]"
                      name="id_subregion"
                      dataType="guid" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\RegionTable_db.Outputs[ADO NET Destination Error Output]"
                  name="ADO NET Destination Error Output"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input]"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\RegionTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\RegionTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\RegionTable_db.Outputs[ADO NET Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Script Component"
              name="Script Component"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              version="8"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8">
              <properties>
                <property
                  name="SourceCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the source code of the component">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7c58e671fccf4d44a170b957394b9989.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DCD375E5-55BF-4A63-A2D7-9BA68DB6B921}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7c58e671fccf4d44a170b957394b9989</RootNamespace>
    <AssemblyName>SC_7c58e671fccf4d44a170b957394b9989</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Generate UID for new column id
         */
        Row.id = Guid.NewGuid();

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid id
    {
        set
        {
            this[0] = value;
        }
    }
    public bool id_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c58e671fccf4d44a170b957394b9989.Properties.Settings.get_Default():SC_7c58e671fccf4d44a170b957394b9989.Properties.Sett" +
    "ings")]

namespace SC_7c58e671fccf4d44a170b957394b9989.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7c58e671fccf4d44a170b957394b9989</msb:CodeName>
		<msb:DisplayName>SC_7c58e671fccf4d44a170b957394b9989</msb:DisplayName>
		<msb:ProjectId>{31157F20-26D6-4082-A8EC-D8C038F3AEAE}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7c58e671fccf4d44a170b957394b9989.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7c58e671fccf4d44a170b957394b9989")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7c58e671fccf4d44a170b957394b9989")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c58e671fccf4d44a170b957394b9989.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c58e671fccf4d44a170b957394b9989.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c58e671fccf4d44a170b957394b9989.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7c58e671fccf4d44a170b957394b9989.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7c58e671fccf4d44a170b957394b9989.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="BinaryCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the binary representation of the component">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7c58e671fccf4d44a170b957394b9989.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOjKeF8AAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAjjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADgxAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
MQAAAAAAAEgAAAACAAUAWCIAAOAOAAABAAAAAAAAAKAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbwwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioyAygTAAAKbwoAAAYqHgIoAQAABioqAgMEBSgUAAAKKjoCFgOMBwAAASgV
AAAKKloDLAgCFigWAAAKKnIRAABwcxcAAAp6HgIoGAAACioeAigZAAAKKjoCKBoAAAoCA30DAAAE
KjoCKBoAAAoCA30EAAAEKh4CKBoAAAoqAAATMAIALQAAAAEAABF+BQAABC0gcq4AAHDQBwAAAigc
AAAKbx0AAApzHgAACgoGgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqLnMVAAAGgAcA
AAQqHgIoIQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAsBQAAI34AAJgFAACEBgAAI1N0cmluZ3MAAAAAHAwAACABAAAjVVMAPA0AABAAAAAj
R1VJRAAAAEwNAACUAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIAAAAAgA
AAAHAAAAFgAAAA8AAAAhAAAADwAAAAEAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAAoAAQAA
AAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDiARQBCgA+Ai0CCgBvAloC
CgBIAy4DCgBzA2EDCgCKA2EDCgCnA2EDCgDGA2EDCgDfA2EDCgD4A2EDCgATBGEDCgAuBGEDCgBH
BGEDCgCABGAECgCgBGAECgDiBBQBCgDpBBQBBgASBc0ACgBSBRQBCgB/BWwFCgCcBRQBCgChBRQB
CgDFBWEDDgDxBdsFDgAKBtsFCgAfBmAEAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABA
AAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwAOAAEAEABkAAAADQAEAA8AAAAQAG4A
eAANAAUAEAAAARAApwB4ABEABwAUAAYAWAATAAYAZAAXAAEAHQJRAAEAHQJRABEATgJbABEAewJf
ABEAvwJ9AFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYB
tAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALogAAAAAMYAtAEpAAcAxyAAAAAAhhhP
ARsACADPIAAAAACGGE8BLwAIANogAAAAAIYI5wE5AAsA6SAAAAAAhgjuAT8ADAAAIQAAAACGAPwB
RAANAAghAAAAAIYABAJEAA0AECEAAAAAhhhPAVUADQAfIQAAAACGGE8BVQAOAC4hAAAAAIMYTwEb
AA8AOCEAAAAAkwiLAmMADwBxIQAAAACTCJ8CaAAPAHghAAAAAJMIqwJtAA8AgCEAAAAAlgjPAoEA
EACTIQAAAACGGE8BGwAQAIchAAAAAJEYOgbZABAAAAABAOMCAAACAOsCAAADAPUCAAAEAPwCAAAB
APUCAAABAAYDAAABAAYDAAABAPUCAAACAAoDAAADAPwCAAABAB4DAAABAB4DAAABACQDAAABACQD
AAABAB4DUQBPAYsAWQBPAYsAYQBPAYsAaQBPAYsAcQBPAYsAeQBPAYsAgQBPAYsAiQBPAYsAkQBP
AYsAmQBPAYsAoQBPAZAAqQBPARsACQBPARsAsQD6BJUACQABBZwAwQBPARsACQDLARsACQDWARsA
OQA5BacAEQBPAS8AEQBBBawAEQBKBZAAyQBPAYsAEQD8AUQAEQAEAkQAGQBPARsA0QBPARsA2QCz
BbIA2QDOBbkAQQBPAb4A8QBPAcoAAQFPARsAIQBPARsALgAbAE4BLgBjAHQBLgALAN0ALgATACUB
LgAjAE4BLgArAE4BLgAzACUBLgA7AFQBLgBDAE4BLgBbAGsBYwCDAKIAaQD7ANAAiQD7ANAA4QAD
AaIA4wDbAKIAxQAEAAEABwADAAgABQAAABACSAAAABMCTQAAAD4CcwAAALcCeAAAANsChgABAAoA
AwABAAsABQACABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAJ0dxFsAAAAAAAC+BAAACwAA
AAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAA
CwAAAAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAEEGAAAAAAAAADxNb2R1bGU+AFNDXzdjNThlNjcx
ZmNjZjRkNDRhMTcwYjk1NzM5NGI5OTg5LmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5w
dXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfN2M1OGU2NzFmY2Nm
NGQ0NGExNzBiOTU3Mzk0Yjk5ODkuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1
dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQBHdWlkAHNldF9pZABzZXRfaWRfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQAaWQAaWRf
SXNOdWxsAFBhcmVudENvbXBvbmVudABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgBy
ZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1
cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRl
ZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZl
cgBPdXRwdXRNYXAAUm93AEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ183
YzU4ZTY3MWZjY2Y0ZDQ0YTE3MGI5NTczOTRiOTk4OQBTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBF
cXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJp
YnV0ZQBOZXdHdWlkAHNldF9JdGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBT
eXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0
ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTQ183YzU4ZTY3MWZjY2Y0
ZDQ0YTE3MGI5NTczOTRiOTk4OS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAA9JAG4A
cAB1AHQAIAAwAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAcVMA
QwBfADcAYwA1ADgAZQA2ADcAMQBmAGMAYwBmADQAZAA0ADQAYQAxADcAMABiADkANQA3ADMAOQA0
AGIAOQA5ADgAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALjnl
LBxTiUmNrdfTt8gwaAAIiYRdzYCAzJEIt3pcVhk04IkDBhIUAwYSGAMgAAEJIAQBCA4SFRIZBSAB
ARIQCSADARIVHQgSGQUgAQERHQQgAQECAyAAAgQoABEdAygAAgMGEgUFIAEBEgUDBhIhAwYSJQQA
ABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYSIAQAABIgBAgAEiAEIAEBDgQgAQEIBiACAg4RXQUg
AR0ICAQBAAAABAAAER0FIAIBCBwGAAESbRFxBCAAEnUGIAIBDhJ1BAcBEiEFIAEBEX0IAQACAAAA
AAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzdjNThlNjcxZmNjZjRkNDRhMTcwYjk1NzM5NGI5
OTg5AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEAYDEAAAAAAAAAAAAAfjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AHAxAAAAAAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAMRbnR0AAAEAxFudHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA3AGMANQA4AGUANgA3ADEAZgBjAGMAZgA0AGQANAA0AGEAMQA3ADAAYgA5ADUANwAzADkANABi
ADkAOQA4ADkAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADgA
MQAuADIAMwA0ADkAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA3
AGMANQA4AGUANgA3ADEAZgBjAGMAZgA0AGQANAA0AGEAMQA3ADAAYgA5ADUANwAzADkANABiADkA
OQA4ADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwA3AGMANQA4AGUANgA3ADEAZgBjAGMAZgA0AGQANAA0AGEAMQA3
ADAAYgA5ADUANwAzADkANABiADkAOQA4ADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8ANwBjADUAOABlADYANwAxAGYAYwBjAGYANABkADQANABhADEANwAw
AGIAOQA1ADcAMwA5ADQAYgA5ADkAOAA5AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgAzADQAOQAyAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgAzADQAOQAyAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAJAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="VSTAProjectName"
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  typeConverter="NOTBROWSABLE">SC_7c58e671fccf4d44a170b957394b9989</property>
                <property
                  name="ScriptLanguage"
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  name="ReadOnlyVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="ReadWriteVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="BreakpointCollection"
                  dataType="System.String"
                  isArray="true"
                  description="List of breakpoints present on the script."
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  name="MetadataChecksum"
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  typeConverter="NOTBROWSABLE">34477de37bde2f6ebf0bb7c9e2cef674</property>
                <property
                  name="UserComponentTypeName"
                  dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Script Component.Inputs[Input 0]"
                  name="Input 0"
                  hasSideEffects="true">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Get Data from CSV - ETL\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0].Columns[id]"
                      name="id"
                      lineageId="Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0].Columns[id]"
                      dataType="guid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Separate date"
              name="Separate date"
              componentClassID="{49928E82-9C4E-49F0-AABE-3812B82707EC}"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              usesDispositions="true"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Separate date.Inputs[Derived Column Input]"
                  name="Derived Column Input"
                  description="Input to the Derived Column Transformation">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\Separate date.Inputs[Derived Column Input].Columns[date]"
                      lineageId="Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]"
                      cachedName="date"
                      cachedDataType="date" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output]"
                  name="Derived Column Output"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Separate date.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[day]"
                      name="day"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[day]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="Expression"
                          dataType="System.String"
                          description="Derived Column Expression"
                          containsID="true">[DAY](#{Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]})</property>
                        <property
                          name="FriendlyExpression"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          containsID="true"
                          expressionType="Notify">DAY(date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[month]"
                      name="month"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[month]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="Expression"
                          dataType="System.String"
                          description="Derived Column Expression"
                          containsID="true">[MONTH](#{Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]})</property>
                        <property
                          name="FriendlyExpression"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          containsID="true"
                          expressionType="Notify">MONTH(date)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[year]"
                      name="year"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output].Columns[year]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          name="Expression"
                          dataType="System.String"
                          description="Derived Column Expression"
                          containsID="true">[YEAR](#{Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1].Columns[date]})</property>
                        <property
                          name="FriendlyExpression"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          containsID="true"
                          expressionType="Notify">YEAR(date)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Error Output]"
                  name="Derived Column Error Output"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Separate date.Inputs[Derived Column Input]"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Set uid for country table"
              name="Set uid for country table"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              version="8"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8">
              <properties>
                <property
                  name="SourceCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the source code of the component">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Generate uid for every country
         */
        Row.idcountry = Guid.NewGuid();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid idcountry
    {
        set
        {
            this[0] = value;
        }
    }
    public bool idcountry_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Settings.get_Default():SC_7c8427a170d24f5793ea398e506ced25.Properties.Sett" +
    "ings")]

namespace SC_7c8427a170d24f5793ea398e506ced25.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7c8427a170d24f5793ea398e506ced25</msb:CodeName>
		<msb:DisplayName>SC_7c8427a170d24f5793ea398e506ced25</msb:DisplayName>
		<msb:ProjectId>{B0D6A16D-238A-446D-BAB3-EC16370CA20A}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7c8427a170d24f5793ea398e506ced25.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7c8427a170d24f5793ea398e506ced25")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7c8427a170d24f5793ea398e506ced25")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7c8427a170d24f5793ea398e506ced25.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{6362623D-6FF6-4A0F-8B60-808A8C0D8733}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7c8427a170d24f5793ea398e506ced25</RootNamespace>
    <AssemblyName>SC_7c8427a170d24f5793ea398e506ced25</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug55bee947-c9a6-4a6d-96a7-53d5f73d1438/ac32f563-dd21-4151-9f5d-a2ce20787f7b&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7c8427a170d24f5793ea398e506ced25.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="BinaryCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the binary representation of the component">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7c8427a170d24f5793ea398e506ced25.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABzXeF8AAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAArjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQxAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
MQAAAAAAAEgAAAACAAUAWCIAAPwOAAABAAAAAAAAAKAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbwwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioyAygTAAAKbwoAAAYqHgIoAQAABioqAgMEBSgUAAAKKjoCFgOMBwAAASgV
AAAKKloDLAgCFigWAAAKKnIRAABwcxcAAAp6HgIoGAAACioeAigZAAAKKjoCKBoAAAoCA30DAAAE
KjoCKBoAAAoCA30EAAAEKh4CKBoAAAoqAAATMAIALQAAAAEAABF+BQAABC0gcq4AAHDQBwAAAigc
AAAKbx0AAApzHgAACgoGgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqLnMVAAAGgAcA
AAQqHgIoIQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAsBQAAI34AAJgFAACgBgAAI1N0cmluZ3MAAAAAOAwAACABAAAjVVMAWA0AABAAAAAj
R1VJRAAAAGgNAACUAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIAAAAAgA
AAAHAAAAFgAAAA8AAAAhAAAADwAAAAEAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAAoAAQAA
AAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDiARQBCgBaAkkCCgCLAnYC
CgBkA0oDCgCPA30DCgCmA30DCgDDA30DCgDiA30DCgD7A30DCgAUBH0DCgAvBH0DCgBKBH0DCgBj
BH0DCgCcBHwECgC8BHwECgD+BBQBCgAFBRQBBgAuBc0ACgBuBRQBCgCbBYgFCgC4BRQBCgC9BRQB
CgDhBX0DDgANBvcFDgAmBvcFCgA7BnwEAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABA
AAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwAOAAEAEABkAAAADQAEAA8AAAAQAG4A
eAANAAUAEAAAARAApwB4ABEABwAUAAYAWAATAAYAZAAXAAEAOQJRAAEAOQJRABEAagJbABEAlwJf
ABEA2wJ9AFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYB
tAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALogAAAAAMYAtAEpAAcAxyAAAAAAhhhP
ARsACADPIAAAAACGGE8BLwAIANogAAAAAIYI5wE5AAsA6SAAAAAAhgj1AT8ADAAAIQAAAACGAAoC
RAANAAghAAAAAIYAEgJEAA0AECEAAAAAhhhPAVUADQAfIQAAAACGGE8BVQAOAC4hAAAAAIMYTwEb
AA8AOCEAAAAAkwinAmMADwBxIQAAAACTCLsCaAAPAHghAAAAAJMIxwJtAA8AgCEAAAAAlgjrAoEA
EACTIQAAAACGGE8BGwAQAIchAAAAAJEYVgbZABAAAAABAP8CAAACAAcDAAADABEDAAAEABgDAAAB
ABEDAAABACIDAAABACIDAAABABEDAAACACYDAAADABgDAAABADoDAAABADoDAAABAEADAAABAEAD
AAABADoDUQBPAYsAWQBPAYsAYQBPAYsAaQBPAYsAcQBPAYsAeQBPAYsAgQBPAYsAiQBPAYsAkQBP
AYsAmQBPAYsAoQBPAZAAqQBPARsACQBPARsAsQAWBZUACQAdBZwAwQBPARsACQDLARsACQDWARsA
OQBVBacAEQBPAS8AEQBdBawAEQBmBZAAyQBPAYsAEQAKAkQAEQASAkQAGQBPARsA0QBPARsA2QDP
BbIA2QDqBbkAQQBPAb4A8QBPAcoAAQFPARsAIQBPARsALgAbAE4BLgBjAHQBLgALAN0ALgATACUB
LgAjAE4BLgArAE4BLgAzACUBLgA7AFQBLgBDAE4BLgBbAGsBYwCDAKIAaQD7ANAAiQD7ANAA4QAD
AaIA4wDbAKIAxQAEAAEABwADAAgABQAAAB4CSAAAACgCTQAAAFoCcwAAANMCeAAAAPcChgABAAoA
AwABAAsABQACABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAJ0d3mEAAAAAAADaBAAACwAA
AAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAA
CwAAAAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAF0GAAAAAAAAADxNb2R1bGU+AFNDXzdjODQyN2Ex
NzBkMjRmNTc5M2VhMzk4ZTUwNmNlZDI1LmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5w
dXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfN2M4NDI3YTE3MGQy
NGY1NzkzZWEzOThlNTA2Y2VkMjUuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1
dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQBHdWlkAHNldF9pZGNvdW50cnkAc2V0X2lkY291bnRyeV9Jc051bGwATmV4dFJvdwBFbmRP
ZlJvd3NldABpZGNvdW50cnkAaWRjb3VudHJ5X0lzTnVsbABQYXJlbnRDb21wb25lbnQAU3lzdGVt
LlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRp
b24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVm
YXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFwAFJvdwBCdWZmZXJDb2x1bW5J
bmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmli
dXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfN2M4NDI3YTE3MGQyNGY1NzkzZWEzOThlNTA2Y2Vk
MjUAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJU1Nj
cmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUATmV3R3VpZABzZXRfSXRlbQBTZXROdWxs
AEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRs
ZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQAuY2N0b3IAU0NfN2M4NDI3YTE3MGQyNGY1NzkzZWEzOThlNTA2Y2VkMjUuUHJvcGVydGll
cy5SZXNvdXJjZXMucmVzb3VyY2VzAAAPSQBuAHAAdQB0ACAAMAAAgJtJAHMATgB1AGwAbAAgAHAA
cgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABz
AGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwA
dQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAHFTAEMAXwA3AGMAOAA0ADIANwBhADEANwAwAGQAMgA0
AGYANQA3ADkAMwBlAGEAMwA5ADgAZQA1ADAANgBjAGUAZAAyADUALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAOvmK4fI0VNOtUtz7RPWUQsACImEXc2AgMyRCLd6XFYZ
NOCJAwYSFAMGEhgDIAABCSAEAQgOEhUSGQUgAQESEAkgAwESFR0IEhkFIAEBER0EIAEBAgMgAAIE
KAARHQMoAAIDBhIFBSABARIFAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEiAE
AAASIAQIABIgBCABAQ4EIAEBCAYgAgIOEV0FIAEdCAgEAQAAAAQAABEdBSACAQgcBgABEm0RcQQg
ABJ1BiACAQ4SdQQHARIhBSABARF9CAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ183
Yzg0MjdhMTcwZDI0ZjU3OTNlYTM5OGU1MDZjZWQyNQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIwAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAHwxAAAAAAAAAAAA
AJ4xAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQMQAAAAAAAAAAAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAN5hnR0AAAEA3mGdHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA3AGMAOAA0ADIANwBhADEANwAwAGQAMgA0AGYANQA3ADkAMwBlAGEAMwA5ADgAZQA1ADAANgBj
AGUAZAAyADUAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADgA
MQAuADIANQAwADUANAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA3
AGMAOAA0ADIANwBhADEANwAwAGQAMgA0AGYANQA3ADkAMwBlAGEAMwA5ADgAZQA1ADAANgBjAGUA
ZAAyADUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwA3AGMAOAA0ADIANwBhADEANwAwAGQAMgA0AGYANQA3ADkAMwBl
AGEAMwA5ADgAZQA1ADAANgBjAGUAZAAyADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8ANwBjADgANAAyADcAYQAxADcAMABkADIANABmADUANwA5ADMAZQBh
ADMAOQA4AGUANQAwADYAYwBlAGQAMgA1AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA1ADAANQA0AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA1ADAANQA0AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAALAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="VSTAProjectName"
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  typeConverter="NOTBROWSABLE">SC_7c8427a170d24f5793ea398e506ced25</property>
                <property
                  name="ScriptLanguage"
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  name="ReadOnlyVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="ReadWriteVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="BreakpointCollection"
                  dataType="System.String"
                  isArray="true"
                  description="List of breakpoints present on the script."
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  name="MetadataChecksum"
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  typeConverter="NOTBROWSABLE">30f598d9ee852a515ec44f0d25e43c78</property>
                <property
                  name="UserComponentTypeName"
                  dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Set uid for country table.Inputs[Input 0]"
                  name="Input 0"
                  hasSideEffects="true">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Set uid for country table.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Get Data from CSV - ETL\Set uid for country table.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Set uid for country table.Outputs[Output 0].Columns[id_country]"
                      name="id_country"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for country table.Outputs[Output 0].Columns[id_country]"
                      dataType="guid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Set uid for every date"
              name="Set uid for every date"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              version="8"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8">
              <properties>
                <property
                  name="SourceCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the source code of the component">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Generate uid for id in every region
         */
        Row.iddate = Guid.NewGuid();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid iddate
    {
        set
        {
            this[0] = value;
        }
    }
    public bool iddate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Settings.get_Default():SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Sett" +
    "ings")]

namespace SC_2007e05a8fd446a98f280a3cc078a01c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_2007e05a8fd446a98f280a3cc078a01c</msb:CodeName>
		<msb:DisplayName>SC_2007e05a8fd446a98f280a3cc078a01c</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{FF568C21-1C47-4423-9A62-CC335802CF59}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_2007e05a8fd446a98f280a3cc078a01c.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2007e05a8fd446a98f280a3cc078a01c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2007e05a8fd446a98f280a3cc078a01c")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2007e05a8fd446a98f280a3cc078a01c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{B52172A5-E40C-46C4-B2E9-A943A1CB4714}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_2007e05a8fd446a98f280a3cc078a01c</RootNamespace><AssemblyName>SC_25A267BCC2C347259502ADF1220E6156</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug43ca4256-f9df-4021-a574-c9a551cf7351/ab1cb098-55ba-4106-81fd-9ae48e9173ae&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2007e05a8fd446a98f280a3cc078a01c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="BinaryCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the binary representation of the component">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_25A267BCC2C347259502ADF1220E6156.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADDseF8AAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAnjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEgxAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
MQAAAAAAAEgAAAACAAUAWCIAAPAOAAABAAAAAAAAAKAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbwwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioyAygTAAAKbwoAAAYqHgIoAQAABioqAgMEBSgUAAAKKjoCFgOMBwAAASgV
AAAKKloDLAgCFigWAAAKKnIRAABwcxcAAAp6HgIoGAAACioeAigZAAAKKjoCKBoAAAoCA30DAAAE
KjoCKBoAAAoCA30EAAAEKh4CKBoAAAoqAAATMAIALQAAAAEAABF+BQAABC0gcq4AAHDQBwAAAigc
AAAKbx0AAApzHgAACgoGgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqLnMVAAAGgAcA
AAQqHgIoIQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAsBQAAI34AAJgFAACUBgAAI1N0cmluZ3MAAAAALAwAACABAAAjVVMATA0AABAAAAAj
R1VJRAAAAFwNAACUAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIAAAAAgA
AAAHAAAAFgAAAA8AAAAhAAAADwAAAAEAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAAoAAQAA
AAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDiARQBCgBOAj0CCgB/AmoC
CgBYAz4DCgCDA3EDCgCaA3EDCgC3A3EDCgDWA3EDCgDvA3EDCgAIBHEDCgAjBHEDCgA+BHEDCgBX
BHEDCgCQBHAECgCwBHAECgDyBBQBCgD5BBQBBgAiBc0ACgBiBRQBCgCPBXwFCgCsBRQBCgCxBRQB
CgDVBXEDDgABBusFDgAaBusFCgAvBnAEAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABA
AAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwAOAAEAEABkAAAADQAEAA8AAAAQAG4A
eAANAAUAEAAAARAApwB4ABEABwAUAAYAWAATAAYAZAAXAAEALQJRAAEALQJRABEAXgJbABEAiwJf
ABEAzwJ9AFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYB
tAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALogAAAAAMYAtAEpAAcAxyAAAAAAhhhP
ARsACADPIAAAAACGGE8BLwAIANogAAAAAIYI5wE5AAsA6SAAAAAAhgjyAT8ADAAAIQAAAACGAAQC
RAANAAghAAAAAIYADAJEAA0AECEAAAAAhhhPAVUADQAfIQAAAACGGE8BVQAOAC4hAAAAAIMYTwEb
AA8AOCEAAAAAkwibAmMADwBxIQAAAACTCK8CaAAPAHghAAAAAJMIuwJtAA8AgCEAAAAAlgjfAoEA
EACTIQAAAACGGE8BGwAQAIchAAAAAJEYSgbZABAAAAABAPMCAAACAPsCAAADAAUDAAAEAAwDAAAB
AAUDAAABABYDAAABABYDAAABAAUDAAACABoDAAADAAwDAAABAC4DAAABAC4DAAABADQDAAABADQD
AAABAC4DUQBPAYsAWQBPAYsAYQBPAYsAaQBPAYsAcQBPAYsAeQBPAYsAgQBPAYsAiQBPAYsAkQBP
AYsAmQBPAYsAoQBPAZAAqQBPARsACQBPARsAsQAKBZUACQARBZwAwQBPARsACQDLARsACQDWARsA
OQBJBacAEQBPAS8AEQBRBawAEQBaBZAAyQBPAYsAEQAEAkQAEQAMAkQAGQBPARsA0QBPARsA2QDD
BbIA2QDeBbkAQQBPAb4A8QBPAcoAAQFPARsAIQBPARsALgAbAE4BLgBjAHQBLgALAN0ALgATACUB
LgAjAE4BLgArAE4BLgAzACUBLgA7AFQBLgBDAE4BLgBbAGsBYwCDAKIAaQD7ANAAiQD7ANAA4QAD
AaIA4wDbAKIAxQAEAAEABwADAAgABQAAABgCSAAAAB8CTQAAAE4CcwAAAMcCeAAAAOsChgABAAoA
AwABAAsABQACABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAJ0daGwAAAAAAADOBAAACwAA
AAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAA
CwAAAAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAFEGAAAAAAAAADxNb2R1bGU+AFNDXzI1QTI2N0JD
QzJDMzQ3MjU5NTAyQURGMTIyMEU2MTU2LmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5w
dXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfMjAwN2UwNWE4ZmQ0
NDZhOThmMjgwYTNjYzA3OGEwMWMuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1
dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQBHdWlkAHNldF9pZGRhdGUAc2V0X2lkZGF0ZV9Jc051bGwATmV4dFJvdwBFbmRPZlJvd3Nl
dABpZGRhdGUAaWRkYXRlX0lzTnVsbABQYXJlbnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBS
ZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUlu
Zm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElE
AElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFwAFJvdwBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVl
AENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0
cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAU0NfMjVBMjY3QkNDMkMzNDcyNTk1MDJBREYxMjIwRTYxNTYAU3RyaW5nAFN0
cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVu
dEVudHJ5UG9pbnRBdHRyaWJ1dGUATmV3R3VpZABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVy
YXRpb25FeGNlcHRpb24AU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBn
ZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IA
U0NfMjAwN2UwNWE4ZmQ0NDZhOThmMjgwYTNjYzA3OGEwMWMuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAAAPSQBuAHAAdQB0ACAAMAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQA
eQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBz
AGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4A
cwB0AGUAYQBkAC4AAHFTAEMAXwAyADAAMAA3AGUAMAA1AGEAOABmAGQANAA0ADYAYQA5ADgAZgAy
ADgAMABhADMAYwBjADAANwA4AGEAMAAxAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAABu+knsaOvFIl9Nok2JRD+4ACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgD
IAABCSAEAQgOEhUSGQUgAQESEAkgAwESFR0IEhkFIAEBER0EIAEBAgMgAAIEKAARHQMoAAIDBhIF
BSABARIFAwYSIQMGEiUEAAASIQQAABIlBQABARIlBAgAEiEECAASJQMGEiAEAAASIAQIABIgBCAB
AQ4EIAEBCAYgAgIOEV0FIAEdCAgEAQAAAAQAABEdBSACAQgcBgABEm0RcQQgABJ1BiACAQ4SdQQH
ARIhBSABARF9CAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ18yMDA3ZTA1YThmZDQ0
NmE5OGYyODBhM2NjMDc4YTAxYwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAAAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAHAxAAAAAAAAAAAAAI4xAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACAMQAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAGhsnR0AAAEAaGydHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwAyADAAMAA3AGUAMAA1AGEAOABmAGQANAA0ADYAYQA5ADgAZgAyADgAMABhADMAYwBjADAANwA4
AGEAMAAxAGMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADgA
MQAuADIANwA3ADUAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAy
ADUAQQAyADYANwBCAEMAQwAyAEMAMwA0ADcAMgA1ADkANQAwADIAQQBEAEYAMQAyADIAMABFADYA
MQA1ADYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwAyADUAQQAyADYANwBCAEMAQwAyAEMAMwA0ADcAMgA1ADkANQAw
ADIAQQBEAEYAMQAyADIAMABFADYAMQA1ADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8AMgAwADAANwBlADAANQBhADgAZgBkADQANAA2AGEAOQA4AGYAMgA4
ADAAYQAzAGMAYwAwADcAOABhADAAMQBjAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA3ADcANQAyAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA3ADcANQAyAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="VSTAProjectName"
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  typeConverter="NOTBROWSABLE">SC_25a267bcc2c347259502adf1220e6156</property>
                <property
                  name="ScriptLanguage"
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  name="ReadOnlyVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="ReadWriteVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="BreakpointCollection"
                  dataType="System.String"
                  isArray="true"
                  description="List of breakpoints present on the script."
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  name="MetadataChecksum"
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  typeConverter="NOTBROWSABLE">ac3055ddcbe134e6bccdb9afd5012938</property>
                <property
                  name="UserComponentTypeName"
                  dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Set uid for every date.Inputs[Input 0]"
                  name="Input 0"
                  hasSideEffects="true">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Set uid for every date.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Get Data from CSV - ETL\Set uid for every date.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Set uid for every date.Outputs[Output 0].Columns[id_date]"
                      name="id_date"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for every date.Outputs[Output 0].Columns[id_date]"
                      dataType="guid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Set uid for every region"
              name="Set uid for every region"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              version="8"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8">
              <properties>
                <property
                  name="SourceCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the source code of the component">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Generate uid for id in every region
         */
        Row.idregion = Guid.NewGuid();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid idregion
    {
        set
        {
            this[0] = value;
        }
    }
    public bool idregion_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Settings.get_Default():SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Sett" +
    "ings")]

namespace SC_2007e05a8fd446a98f280a3cc078a01c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_2007e05a8fd446a98f280a3cc078a01c</msb:CodeName>
		<msb:DisplayName>SC_2007e05a8fd446a98f280a3cc078a01c</msb:DisplayName>
		<msb:ProjectId>{FF568C21-1C47-4423-9A62-CC335802CF59}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_2007e05a8fd446a98f280a3cc078a01c.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2007e05a8fd446a98f280a3cc078a01c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2007e05a8fd446a98f280a3cc078a01c")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2007e05a8fd446a98f280a3cc078a01c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B52172A5-E40C-46C4-B2E9-A943A1CB4714}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2007e05a8fd446a98f280a3cc078a01c</RootNamespace>
    <AssemblyName>SC_2007e05a8fd446a98f280a3cc078a01c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug43ca4256-f9df-4021-a574-c9a551cf7351/ab1cb098-55ba-4106-81fd-9ae48e9173ae&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2007e05a8fd446a98f280a3cc078a01c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2007e05a8fd446a98f280a3cc078a01c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="BinaryCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the binary representation of the component">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2007e05a8fd446a98f280a3cc078a01c.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAODVeF8AAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAnjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFAxAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
MQAAAAAAAEgAAAACAAUAWCIAAPgOAAABAAAAAAAAAKAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbwwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioyAygTAAAKbwoAAAYqHgIoAQAABioqAgMEBSgUAAAKKjoCFgOMBwAAASgV
AAAKKloDLAgCFigWAAAKKnIRAABwcxcAAAp6HgIoGAAACioeAigZAAAKKjoCKBoAAAoCA30DAAAE
KjoCKBoAAAoCA30EAAAEKh4CKBoAAAoqAAATMAIALQAAAAEAABF+BQAABC0gcq4AAHDQBwAAAigc
AAAKbx0AAApzHgAACgoGgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqLnMVAAAGgAcA
AAQqHgIoIQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAsBQAAI34AAJgFAACcBgAAI1N0cmluZ3MAAAAANAwAACABAAAjVVMAVA0AABAAAAAj
R1VJRAAAAGQNAACUAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIAAAAAgA
AAAHAAAAFgAAAA8AAAAhAAAADwAAAAEAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAAoAAQAA
AAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDiARQBCgBWAkUCCgCHAnIC
CgBgA0YDCgCLA3kDCgCiA3kDCgC/A3kDCgDeA3kDCgD3A3kDCgAQBHkDCgArBHkDCgBGBHkDCgBf
BHkDCgCYBHgECgC4BHgECgD6BBQBCgABBRQBBgAqBc0ACgBqBRQBCgCXBYQFCgC0BRQBCgC5BRQB
CgDdBXkDDgAJBvMFDgAiBvMFCgA3BngEAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABA
AAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwAOAAEAEABkAAAADQAEAA8AAAAQAG4A
eAANAAUAEAAAARAApwB4ABEABwAUAAYAWAATAAYAZAAXAAEANQJRAAEANQJRABEAZgJbABEAkwJf
ABEA1wJ9AFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYB
tAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALogAAAAAMYAtAEpAAcAxyAAAAAAhhhP
ARsACADPIAAAAACGGE8BLwAIANogAAAAAIYI5wE5AAsA6SAAAAAAhgj0AT8ADAAAIQAAAACGAAgC
RAANAAghAAAAAIYAEAJEAA0AECEAAAAAhhhPAVUADQAfIQAAAACGGE8BVQAOAC4hAAAAAIMYTwEb
AA8AOCEAAAAAkwijAmMADwBxIQAAAACTCLcCaAAPAHghAAAAAJMIwwJtAA8AgCEAAAAAlgjnAoEA
EACTIQAAAACGGE8BGwAQAIchAAAAAJEYUgbZABAAAAABAPsCAAACAAMDAAADAA0DAAAEABQDAAAB
AA0DAAABAB4DAAABAB4DAAABAA0DAAACACIDAAADABQDAAABADYDAAABADYDAAABADwDAAABADwD
AAABADYDUQBPAYsAWQBPAYsAYQBPAYsAaQBPAYsAcQBPAYsAeQBPAYsAgQBPAYsAiQBPAYsAkQBP
AYsAmQBPAYsAoQBPAZAAqQBPARsACQBPARsAsQASBZUACQAZBZwAwQBPARsACQDLARsACQDWARsA
OQBRBacAEQBPAS8AEQBZBawAEQBiBZAAyQBPAYsAEQAIAkQAEQAQAkQAGQBPARsA0QBPARsA2QDL
BbIA2QDmBbkAQQBPAb4A8QBPAcoAAQFPARsAIQBPARsALgAbAE4BLgBjAHQBLgALAN0ALgATACUB
LgAjAE4BLgArAE4BLgAzACUBLgA7AFQBLgBDAE4BLgBbAGsBYwCDAKIAaQD7ANAAiQD7ANAA4QAD
AaIA4wDbAKIAxQAEAAEABwADAAgABQAAABwCSAAAACUCTQAAAFYCcwAAAM8CeAAAAPMChgABAAoA
AwABAAsABQACABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAJ0dQGEAAAAAAADWBAAACwAA
AAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAA
CwAAAAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAFkGAAAAAAAAADxNb2R1bGU+AFNDXzIwMDdlMDVh
OGZkNDQ2YTk4ZjI4MGEzY2MwNzhhMDFjLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5w
dXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfMjAwN2UwNWE4ZmQ0
NDZhOThmMjgwYTNjYzA3OGEwMWMuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1
dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQBHdWlkAHNldF9pZHJlZ2lvbgBzZXRfaWRyZWdpb25fSXNOdWxsAE5leHRSb3cARW5kT2ZS
b3dzZXQAaWRyZWdpb24AaWRyZWdpb25fSXNOdWxsAFBhcmVudENvbXBvbmVudABTeXN0ZW0uUmVz
b3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBD
dWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVy
ZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0
AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAAUm93AEJ1ZmZlckNvbHVtbkluZGV4
ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1
bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ18yMDA3ZTA1YThmZDQ0NmE5OGYyODBhM2NjMDc4YTAxYwBT
dHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0
Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBOZXdHdWlkAHNldF9JdGVtAFNldE51bGwASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFz
c2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AC5jY3RvcgBTQ18yMDA3ZTA1YThmZDQ0NmE5OGYyODBhM2NjMDc4YTAxYy5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAACAm0kAcwBOAHUAbABsACAAcAByAG8A
cABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAu
ACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0A
bgAgAGkAbgBzAHQAZQBhAGQALgAAcVMAQwBfADIAMAAwADcAZQAwADUAYQA4AGYAZAA0ADQANgBh
ADkAOABmADIAOAAwAGEAMwBjAGMAMAA3ADgAYQAwADEAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAYXgqjunlBU2hR8hd66w/oAAIiYRdzYCAzJEIt3pcVhk04IkD
BhIUAwYSGAMgAAEJIAQBCA4SFRIZBSABARIQCSADARIVHQgSGQUgAQERHQQgAQECAyAAAgQoABEd
AygAAgMGEgUFIAEBEgUDBhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQIABIlAwYSIAQAABIg
BAgAEiAEIAEBDgQgAQEIBiACAg4RXQUgAR0ICAQBAAAABAAAER0FIAIBCBwGAAESbRFxBCAAEnUG
IAIBDhJ1BAcBEiEFIAEBEX0IAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzIwMDdl
MDVhOGZkNDQ2YTk4ZjI4MGEzY2MwNzhhMDFjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAA
AAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAeDEAAAAAAAAAAAAAjjEA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAxAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAEBhnR0AAAEAQGGdHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwAyADAAMAA3AGUAMAA1AGEAOABmAGQANAA0ADYAYQA5ADgAZgAyADgAMABhADMAYwBjADAANwA4
AGEAMAAxAGMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADgA
MQAuADIANAA4ADkANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAy
ADAAMAA3AGUAMAA1AGEAOABmAGQANAA0ADYAYQA5ADgAZgAyADgAMABhADMAYwBjADAANwA4AGEA
MAAxAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwAyADAAMAA3AGUAMAA1AGEAOABmAGQANAA0ADYAYQA5ADgAZgAy
ADgAMABhADMAYwBjADAANwA4AGEAMAAxAGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8AMgAwADAANwBlADAANQBhADgAZgBkADQANAA2AGEAOQA4AGYAMgA4
ADAAYQAzAGMAYwAwADcAOABhADAAMQBjAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA0ADgAOQA2AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA0ADgAOQA2AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="VSTAProjectName"
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  typeConverter="NOTBROWSABLE">SC_2007e05a8fd446a98f280a3cc078a01c</property>
                <property
                  name="ScriptLanguage"
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  name="ReadOnlyVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="ReadWriteVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="BreakpointCollection"
                  dataType="System.String"
                  isArray="true"
                  description="List of breakpoints present on the script."
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  name="MetadataChecksum"
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  typeConverter="NOTBROWSABLE">c4d045a8610c54ad2c385532ebbf07fc</property>
                <property
                  name="UserComponentTypeName"
                  dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Set uid for every region.Inputs[Input 0]"
                  name="Input 0"
                  hasSideEffects="true">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Get Data from CSV - ETL\Set uid for every region.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0].Columns[id_region]"
                      name="id_region"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0].Columns[id_region]"
                      dataType="guid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Set uid for subregion"
              name="Set uid for subregion"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              version="8"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8">
              <properties>
                <property
                  name="SourceCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the source code of the component">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Generate uid for every country
         */
        Row.idsubregion = Guid.NewGuid();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Guid idsubregion
    {
        set
        {
            this[0] = value;
        }
    }
    public bool idsubregion_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Settings.get_Default():SC_7c8427a170d24f5793ea398e506ced25.Properties.Sett" +
    "ings")]

namespace SC_7c8427a170d24f5793ea398e506ced25.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7c8427a170d24f5793ea398e506ced25</msb:CodeName>
		<msb:DisplayName>SC_7c8427a170d24f5793ea398e506ced25</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{B0D6A16D-238A-446D-BAB3-EC16370CA20A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7c8427a170d24f5793ea398e506ced25.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7c8427a170d24f5793ea398e506ced25")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7c8427a170d24f5793ea398e506ced25")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7c8427a170d24f5793ea398e506ced25.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{6362623D-6FF6-4A0F-8B60-808A8C0D8733}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_7c8427a170d24f5793ea398e506ced25</RootNamespace><AssemblyName>SC_D33D43942E7F457A8FC12BBC7BC00B30</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug55bee947-c9a6-4a6d-96a7-53d5f73d1438/ac32f563-dd21-4151-9f5d-a2ce20787f7b&quot;" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7c8427a170d24f5793ea398e506ced25.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7c8427a170d24f5793ea398e506ced25.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="BinaryCode"
                  state="cdata"
                  dataType="System.String"
                  isArray="true"
                  description="Stores the binary representation of the component">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_D33D43942E7F457A8FC12BBC7BC00B30.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHXXeF8AAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAArjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFwxAABPAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
MQAAAAAAAEgAAAACAAUAWCIAAAQPAAABAAAAAAAAAKAhAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbwwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACioyAygTAAAKbwoAAAYqHgIoAQAABioqAgMEBSgUAAAKKjoCFgOMBwAAASgV
AAAKKloDLAgCFigWAAAKKnIRAABwcxcAAAp6HgIoGAAACioeAigZAAAKKjoCKBoAAAoCA30DAAAE
KjoCKBoAAAoCA30EAAAEKh4CKBoAAAoqAAATMAIALQAAAAEAABF+BQAABC0gcq4AAHDQBwAAAigc
AAAKbx0AAApzHgAACgoGgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqLnMVAAAGgAcA
AAQqHgIoIQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAsBQAAI34AAJgFAACoBgAAI1N0cmluZ3MAAAAAQAwAACABAAAjVVMAYA0AABAAAAAj
R1VJRAAAAHANAACUAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAIAAAAAgA
AAAHAAAAFgAAAA8AAAAhAAAADwAAAAEAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAAoAAQAA
AAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0ABgCFAc0ACgDiARQBCgBiAlECCgCTAn4C
CgBsA1IDCgCXA4UDCgCuA4UDCgDLA4UDCgDqA4UDCgADBIUDCgAcBIUDCgA3BIUDCgBSBIUDCgBr
BIUDCgCkBIQECgDEBIQECgAGBRQBCgANBRQBBgA2Bc0ACgB2BRQBCgCjBZAFCgDABRQBCgDFBRQB
CgDpBYUDDgAVBv8FDgAuBv8FCgBDBoQEAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABA
AAAACAADAAUAAQAQAEsAAAAJAAMACQABABAAWAAAAA0AAwAOAAEAEABkAAAADQAEAA8AAAAQAG4A
eAANAAUAEAAAARAApwB4ABEABwAUAAYAWAATAAYAZAAXAAEAQQJRAAEAQQJRABEAcgJbABEAnwJf
ABEA4wJ9AFAgAAAAAIYYTwEbAAEAcCAAAAAAxgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYB
tAEpAAYAqiAAAAAAxgDLARsABwCyIAAAAADGANYBGwAHALogAAAAAMYAtAEpAAcAxyAAAAAAhhhP
ARsACADPIAAAAACGGE8BLwAIANogAAAAAIYI5wE5AAsA6SAAAAAAhgj3AT8ADAAAIQAAAACGAA4C
RAANAAghAAAAAIYAFgJEAA0AECEAAAAAhhhPAVUADQAfIQAAAACGGE8BVQAOAC4hAAAAAIMYTwEb
AA8AOCEAAAAAkwivAmMADwBxIQAAAACTCMMCaAAPAHghAAAAAJMIzwJtAA8AgCEAAAAAlgjzAoEA
EACTIQAAAACGGE8BGwAQAIchAAAAAJEYXgbZABAAAAABAAcDAAACAA8DAAADABkDAAAEACADAAAB
ABkDAAABACoDAAABACoDAAABABkDAAACAC4DAAADACADAAABAEIDAAABAEIDAAABAEgDAAABAEgD
AAABAEIDUQBPAYsAWQBPAYsAYQBPAYsAaQBPAYsAcQBPAYsAeQBPAYsAgQBPAYsAiQBPAYsAkQBP
AYsAmQBPAYsAoQBPAZAAqQBPARsACQBPARsAsQAeBZUACQAlBZwAwQBPARsACQDLARsACQDWARsA
OQBdBacAEQBPAS8AEQBlBawAEQBuBZAAyQBPAYsAEQAOAkQAEQAWAkQAGQBPARsA0QBPARsA2QDX
BbIA2QDyBbkAQQBPAb4A8QBPAcoAAQFPARsAIQBPARsALgAbAE4BLgBjAHQBLgALAN0ALgATACUB
LgAjAE4BLgArAE4BLgAzACUBLgA7AFQBLgBDAE4BLgBbAGsBYwCDAKIAaQD7ANAAiQD7ANAA4QAD
AaIA4wDbAKIAxQAEAAEABwADAAgABQAAACICSAAAAC4CTQAAAGICcwAAANsCeAAAAP8ChgABAAoA
AwABAAsABQACABEABwACABIACQABABMACQACABQACwAEgAAAAQAAAJ0dCmIAAAAAAADiBAAACwAA
AAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsBAAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAA
CwAAAAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAGUGAAAAAAAAADxNb2R1bGU+AFNDX0QzM0Q0Mzk0
MkU3RjQ1N0E4RkMxMkJCQzdCQzAwQjMwLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5w
dXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfN2M4NDI3YTE3MGQy
NGY1NzkzZWEzOThlNTA2Y2VkMjUuUHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBv
bmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3RvcgBNaWNyb3NvZnQuU3FsU2VydmVyLlBp
cGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1
dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQBHdWlkAHNldF9pZHN1YnJlZ2lvbgBzZXRfaWRzdWJyZWdpb25fSXNOdWxsAE5leHRSb3cA
RW5kT2ZSb3dzZXQAaWRzdWJyZWdpb24AaWRzdWJyZWdpb25fSXNOdWxsAFBhcmVudENvbXBvbmVu
dABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdl
cgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVm
YXVsdABEZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAAUm93AEJ1ZmZl
ckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRp
b25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19EMzNENDM5NDJFN0Y0NTdBOEZDMTJC
QkM3QkMwMEIzMABTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhl
cwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBOZXdHdWlkAHNldF9JdGVt
AFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAC5jY3RvcgBTQ183Yzg0MjdhMTcwZDI0ZjU3OTNlYTM5OGU1MDZjZWQyNS5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAACAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAcVMAQwBfADcAYwA4ADQAMgA3AGEAMQA3
ADAAZAAyADQAZgA1ADcAOQAzAGUAYQAzADkAOABlADUAMAA2AGMAZQBkADIANQAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAABAdByeQaikqbEvypFPA+BAAIiYRdzYCA
zJEIt3pcVhk04IkDBhIUAwYSGAMgAAEJIAQBCA4SFRIZBSABARIQCSADARIVHQgSGQUgAQERHQQg
AQECAyAAAgQoABEdAygAAgMGEgUFIAEBEgUDBhIhAwYSJQQAABIhBAAAEiUFAAEBEiUECAASIQQI
ABIlAwYSIAQAABIgBAgAEiAEIAEBDgQgAQEIBiACAg4RXQUgAR0ICAQBAAAABAAAER0FIAIBCBwG
AAESbRFxBCAAEnUGIAIBDhJ1BAcBEiEFIAEBEX0IAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
KAEAI1NDXzdjODQyN2ExNzBkMjRmNTc5M2VhMzk4ZTUwNmNlZDI1AAAFAQAAAAAWAQARQ29weXJp
Z2h0IEAgIDIwMjAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAhDEA
AAAAAAAAAAAAnjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAxAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAApinR0AAAEACmKdHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA3AGMAOAA0ADIANwBhADEANwAwAGQAMgA0AGYANQA3ADkAMwBlAGEAMwA5ADgAZQA1ADAANgBj
AGUAZAAyADUAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADgA
MQAuADIANQAwADkAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBE
ADMAMwBEADQAMwA5ADQAMgBFADcARgA0ADUANwBBADgARgBDADEAMgBCAEIAQwA3AEIAQwAwADAA
QgAzADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwBEADMAMwBEADQAMwA5ADQAMgBFADcARgA0ADUANwBBADgARgBD
ADEAMgBCAEIAQwA3AEIAQwAwADAAQgAzADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8ANwBjADgANAAyADcAYQAxADcAMABkADIANABmADUANwA5ADMAZQBh
ADMAOQA4AGUANQAwADYAYwBlAGQAMgA1AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA1ADAAOQA4AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUAOAAxAC4AMgA1ADAAOQA4AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAALAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  name="VSTAProjectName"
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  typeConverter="NOTBROWSABLE">SC_d33d43942e7f457a8fc12bbc7bc00b30</property>
                <property
                  name="ScriptLanguage"
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  name="ReadOnlyVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="ReadWriteVariables"
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="BreakpointCollection"
                  dataType="System.String"
                  isArray="true"
                  description="List of breakpoints present on the script."
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  name="MetadataChecksum"
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  typeConverter="NOTBROWSABLE">a089246c63355a016c35342aefec623b</property>
                <property
                  name="UserComponentTypeName"
                  dataType="System.String">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Set uid for subregion.Inputs[Input 0]"
                  name="Input 0"
                  hasSideEffects="true">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Set uid for subregion.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Get Data from CSV - ETL\Set uid for subregion.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\Set uid for subregion.Outputs[Output 0].Columns[id_subregion]"
                      name="id_subregion"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for subregion.Outputs[Output 0].Columns[id_subregion]"
                      dataType="guid" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\Subregion table"
              name="Subregion table"
              componentClassID="{EC139FBC-694E-490B-8EA7-35690FB0F445}"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0">
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\Subregion table.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\Subregion table.Outputs[Multicast Output 1]"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Get Data from CSV - ETL\Subregion table.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Subregion table.Outputs[Multicast Output 2]"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Get Data from CSV - ETL\Subregion table.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Data from CSV - ETL\Subregion table.Outputs[Multicast Output 3]"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Get Data from CSV - ETL\Subregion table.Inputs[Multicast Input 1]"
                  deleteOutputOnPathDetached="true"
                  dangling="true">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Data from CSV - ETL\SubregionTable_db"
              name="SubregionTable_db"
              componentClassID="{4ADA7EAA-136C-4215-8098-D7A7C27FC0D1}"
              description="OLE DB Destination"
              usesDispositions="true"
              version="4"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4">
              <properties>
                <property
                  name="CommandTimeout"
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out.">0</property>
                <property
                  name="OpenRowset"
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset.">[dbo].[Dim_Region_Sub]</property>
                <property
                  name="OpenRowsetVariable"
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."></property>
                <property
                  name="SqlCommand"
                  dataType="System.String"
                  description="The SQL command to be executed."
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  name="DefaultCodePage"
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source.">1252</property>
                <property
                  name="AlwaysUseDefaultCodePage"
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data.">false</property>
                <property
                  name="AccessMode"
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  typeConverter="AccessMode">0</property>
                <property
                  name="FastLoadKeepIdentity"
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on.">false</property>
                <property
                  name="FastLoadKeepNulls"
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on.">false</property>
                <property
                  name="FastLoadOptions"
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."></property>
                <property
                  name="FastLoadMaxInsertCommitSize"
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on.">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Data from CSV - ETL\SubregionTable_db.Connections[OleDbConnection]"
                  name="OleDbConnection"
                  description="The OLE DB runtime connection used to access the database."
                  connectionManagerID="Package.ConnectionManagers[localhost.db_region_mobility.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost.db_region_mobility.sa]" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input]"
                  name="OLE DB Destination Input"
                  hasSideEffects="true"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].Columns[sub_region_1]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_1]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[sub_region_1]"
                      cachedName="sub_region_1"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].Columns[sub_region_2]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[sub_region_2]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[sub_region_2]"
                      cachedName="sub_region_2"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].Columns[metro_area]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[metro_area]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[metro_area]"
                      cachedName="metro_area"
                      cachedDataType="str"
                      cachedLength="100"
                      cachedCodepage="1252" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].Columns[id_subregion]"
                      lineageId="Package\Get Data from CSV - ETL\Set uid for subregion.Outputs[Output 0].Columns[id_subregion]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      cachedName="id_subregion"
                      cachedDataType="guid" />
                    <inputColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].Columns[id_country]"
                      lineageId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1].Columns[id_country]"
                      externalMetadataColumnId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id_country]"
                      cachedName="id_country"
                      cachedDataType="guid" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      name="id"
                      dataType="guid" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[sub_region_1]"
                      name="sub_region_1"
                      dataType="str"
                      length="100"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[sub_region_2]"
                      name="sub_region_2"
                      dataType="str"
                      length="100"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[metro_area]"
                      name="metro_area"
                      dataType="str"
                      length="100"
                      codePage="1252" />
                    <externalMetadataColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input].ExternalColumns[id_country]"
                      name="id_country"
                      dataType="guid" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Data from CSV - ETL\SubregionTable_db.Outputs[OLE DB Destination Error Output]"
                  name="OLE DB Destination Error Output"
                  exclusionGroup="1"
                  synchronousInputId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input]"
                  isErrorOut="true">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      lineageId="Package\Get Data from CSV - ETL\SubregionTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Data from CSV - ETL\SubregionTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      lineageId="Package\Get Data from CSV - ETL\SubregionTable_db.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Aggregate Output 1]"
              name="Aggregate Output 1"
              startId="Package\Get Data from CSV - ETL\Get Region Dimension.Outputs[Aggregate Output 1]"
              endId="Package\Get Data from CSV - ETL\Set uid for every region.Inputs[Input 0]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Aggregate Output 12]"
              name="Aggregate Output 1"
              startId="Package\Get Data from CSV - ETL\Get Subregion Data.Outputs[Aggregate Output 1]"
              endId="Package\Get Data from CSV - ETL\Set uid for subregion.Inputs[Input 0]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Aggregate Output 13]"
              name="Aggregate Output 1"
              startId="Package\Get Data from CSV - ETL\Get Date Dimension.Outputs[Aggregate Output 1]"
              endId="Package\Get Data from CSV - ETL\Set uid for every date.Inputs[Input 0]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Aggregate Output 11]"
              name="Aggregate Output 1"
              startId="Package\Get Data from CSV - ETL\Get Country Table.Outputs[Aggregate Output 1]"
              endId="Package\Get Data from CSV - ETL\Set uid for country table.Inputs[Input 0]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Data Conversion Output]"
              name="Data Conversion Output"
              startId="Package\Get Data from CSV - ETL\Data Conversion 1.Outputs[Data Conversion Output]"
              endId="Package\Get Data from CSV - ETL\Script Component.Inputs[Input 0]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Derived Column Output]"
              name="Derived Column Output"
              startId="Package\Get Data from CSV - ETL\Separate date.Outputs[Derived Column Output]"
              endId="Package\Get Data from CSV - ETL\Date data.Inputs[Multicast Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Flat File Source Output]"
              name="Flat File Source Output"
              startId="Package\Get Data from CSV - ETL\Flat File Source.Outputs[Flat File Source Output]"
              endId="Package\Get Data from CSV - ETL\Data Conversion 1.Inputs[Data Conversion Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Merge Join Output]"
              name="Merge Join Output"
              startId="Package\Get Data from CSV - ETL\Merge Join.Outputs[Merge Join Output]"
              endId="Package\Get Data from CSV - ETL\Get Subregion Data.Inputs[Aggregate Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Merge Join Output3]"
              name="Merge Join Output"
              startId="Package\Get Data from CSV - ETL\Merge Join 3.Outputs[Merge Join Output]"
              endId="Package\Get Data from CSV - ETL\Order by id 2.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Merge Join Output2]"
              name="Merge Join Output"
              startId="Package\Get Data from CSV - ETL\Merge Join 2.Outputs[Merge Join Output]"
              endId="Package\Get Data from CSV - ETL\Order by id 1.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Merge Join Output4]"
              name="Merge Join Output"
              startId="Package\Get Data from CSV - ETL\fact_table.Outputs[Merge Join Output]"
              endId="Package\Get Data from CSV - ETL\FactTable_db.Inputs[ADO NET Destination Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Merge Join Output1]"
              name="Merge Join Output"
              startId="Package\Get Data from CSV - ETL\Merge Join 1.Outputs[Merge Join Output]"
              endId="Package\Get Data from CSV - ETL\Multicast.Inputs[Multicast Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 14]"
              name="Multicast Output 1"
              startId="Package\Get Data from CSV - ETL\Date data.Outputs[Multicast Output 1]"
              endId="Package\Get Data from CSV - ETL\DateTable_db.Inputs[OLE DB Destination Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 13]"
              name="Multicast Output 1"
              startId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 1]"
              endId="Package\Get Data from CSV - ETL\Get Date Dimension.Inputs[Aggregate Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 11]"
              name="Multicast Output 1"
              startId="Package\Get Data from CSV - ETL\Country table.Outputs[Multicast Output 1]"
              endId="Package\Get Data from CSV - ETL\CountryTable_db.Inputs[OLE DB Destination Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 12]"
              name="Multicast Output 1"
              startId="Package\Get Data from CSV - ETL\Subregion table.Outputs[Multicast Output 1]"
              endId="Package\Get Data from CSV - ETL\SubregionTable_db.Inputs[OLE DB Destination Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 1]"
              name="Multicast Output 1"
              startId="Package\Get Data from CSV - ETL\Region's Data.Outputs[Multicast Output 1]"
              endId="Package\Get Data from CSV - ETL\Get Country Table.Inputs[Aggregate Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 22]"
              name="Multicast Output 2"
              startId="Package\Get Data from CSV - ETL\Multicast.Outputs[Multicast Output 2]"
              endId="Package\Get Data from CSV - ETL\Order by iso 2.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 2]"
              name="Multicast Output 2"
              startId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 2]"
              endId="Package\Get Data from CSV - ETL\Get Region Dimension.Inputs[Aggregate Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 23]"
              name="Multicast Output 2"
              startId="Package\Get Data from CSV - ETL\Date data.Outputs[Multicast Output 2]"
              endId="Package\Get Data from CSV - ETL\Order by date 2.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 21]"
              name="Multicast Output 2"
              startId="Package\Get Data from CSV - ETL\Subregion table.Outputs[Multicast Output 2]"
              endId="Package\Get Data from CSV - ETL\Order by subregion 2.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 32]"
              name="Multicast Output 3"
              startId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 3]"
              endId="Package\Get Data from CSV - ETL\Order by iso 1.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 31]"
              name="Multicast Output 3"
              startId="Package\Get Data from CSV - ETL\Region's Data.Outputs[Multicast Output 3]"
              endId="Package\Get Data from CSV - ETL\Order by subregion 1.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 33]"
              name="Multicast Output 3"
              startId="Package\Get Data from CSV - ETL\Multicast.Outputs[Multicast Output 3]"
              endId="Package\Get Data from CSV - ETL\RegionTable_db.Inputs[ADO NET Destination Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 3]"
              name="Multicast Output 3"
              startId="Package\Get Data from CSV - ETL\Country table.Outputs[Multicast Output 3]"
              endId="Package\Get Data from CSV - ETL\Order by country 1.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 4]"
              name="Multicast Output 4"
              startId="Package\Get Data from CSV - ETL\Region's Data.Outputs[Multicast Output 4]"
              endId="Package\Get Data from CSV - ETL\Order by country 2.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Multicast Output 41]"
              name="Multicast Output 4"
              startId="Package\Get Data from CSV - ETL\Raw Data.Outputs[Multicast Output 4]"
              endId="Package\Get Data from CSV - ETL\Ordery by date 1.Inputs[Sort Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Output 01]"
              name="Output 0"
              startId="Package\Get Data from CSV - ETL\Set uid for every region.Outputs[Output 0]"
              endId="Package\Get Data from CSV - ETL\Region's Data.Inputs[Multicast Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Output 03]"
              name="Output 0"
              startId="Package\Get Data from CSV - ETL\Set uid for subregion.Outputs[Output 0]"
              endId="Package\Get Data from CSV - ETL\Subregion table.Inputs[Multicast Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Output 0]"
              name="Output 0"
              startId="Package\Get Data from CSV - ETL\Script Component.Outputs[Output 0]"
              endId="Package\Get Data from CSV - ETL\Raw Data.Inputs[Multicast Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Output 02]"
              name="Output 0"
              startId="Package\Get Data from CSV - ETL\Set uid for country table.Outputs[Output 0]"
              endId="Package\Get Data from CSV - ETL\Country table.Inputs[Multicast Input 1]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Output 04]"
              name="Output 0"
              startId="Package\Get Data from CSV - ETL\Set uid for every date.Outputs[Output 0]"
              endId="Package\Get Data from CSV - ETL\Separate date.Inputs[Derived Column Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output8]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by id 1.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Left Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output9]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by id 2.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\fact_table.Inputs[Merge Join Right Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by country 2.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Right Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output3]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by subregion 2.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Right Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output2]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by subregion 1.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join 1.Inputs[Merge Join Left Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output5]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by iso 2.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Right Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output4]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by iso 1.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join 2.Inputs[Merge Join Left Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output1]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by country 1.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join.Inputs[Merge Join Left Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output7]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Order by date 2.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Right Input]" />
            <path
              refId="Package\Get Data from CSV - ETL.Paths[Sort Output6]"
              name="Sort Output"
              startId="Package\Get Data from CSV - ETL\Ordery by date 1.Outputs[Sort Output]"
              endId="Package\Get Data from CSV - ETL\Merge Join 3.Inputs[Merge Join Left Input]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="195,42"
          Id="Package\Get Data from CSV - ETL"
          TopLeft="153,113" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get Data from CSV - ETL">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="150,42"
          Id="Package\Get Data from CSV - ETL\Flat File Source"
          TopLeft="1232.5,1.25" />
        <NodeLayout
          Size="123,42"
          Id="Package\Get Data from CSV - ETL\Raw Data"
          TopLeft="1249.5,279.75" />
        <NodeLayout
          Size="182,42"
          Id="Package\Get Data from CSV - ETL\Get Region Dimension"
          TopLeft="517.5,283.25" />
        <NodeLayout
          Size="143,42"
          Id="Package\Get Data from CSV - ETL\Region's Data"
          TopLeft="353,448.75" />
        <NodeLayout
          Size="164,42"
          Id="Package\Get Data from CSV - ETL\Get Country Table"
          TopLeft="124,446.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 1]"
          TopLeft="353,468.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-65,0"
              Start="0,0"
              End="-57.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-57.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="162,42"
          Id="Package\Get Data from CSV - ETL\Script Component"
          TopLeft="1228.5,180.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Output 0]"
          TopLeft="1310.25,222.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 2]"
          TopLeft="1249.5,302.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-550,0"
              Start="0,0"
              End="-542.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-542.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="189,42"
          Id="Package\Get Data from CSV - ETL\Set uid for every region"
          TopLeft="508.5,365.25" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Aggregate Output 1]"
          TopLeft="605.75,325.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Output 01]"
          TopLeft="603,407.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-178.5,41.5"
              Start="0,0"
              End="-178.5,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.75"
                    Point2="0,20.75"
                    Point3="-4,20.75" />
                  <mssgle:LineSegment
                    End="-174.5,20.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-174.5,20.75"
                    Point2="-178.5,20.75"
                    Point3="-178.5,24.75" />
                  <mssgle:LineSegment
                    End="-178.5,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="192,42"
          Id="Package\Get Data from CSV - ETL\Set uid for country table"
          TopLeft="106,517.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Aggregate Output 11]"
          TopLeft="204,488.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="177,42"
          Id="Package\Get Data from CSV - ETL\Set uid for subregion"
          TopLeft="528,683.75" />
        <NodeLayout
          Size="141,42"
          Id="Package\Get Data from CSV - ETL\Country table"
          TopLeft="135,592.75" />
        <NodeLayout
          Size="152,42"
          Id="Package\Get Data from CSV - ETL\Subregion table"
          TopLeft="762,624.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Output 02]"
          TopLeft="203.75,559.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Output 03]"
          TopLeft="705,704.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57,-59"
              Start="0,0"
              End="49.5,-59">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="24.5,0"
                    Point2="28.5,0"
                    Point3="28.5,-4" />
                  <mssgle:LineSegment
                    End="28.5,-55" />
                  <mssgle:CubicBezierSegment
                    Point1="28.5,-55"
                    Point2="28.5,-59"
                    Point3="32.5,-59" />
                  <mssgle:LineSegment
                    End="49.5,-59" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="158,42"
          Id="Package\Get Data from CSV - ETL\CountryTable_db"
          TopLeft="26.0000000000001,687.75" />
        <NodeLayout
          Size="169,42"
          Id="Package\Get Data from CSV - ETL\SubregionTable_db"
          TopLeft="756,720.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 11]"
          TopLeft="183.333333333333,634.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-78.3333333333333,53"
              Start="0,0"
              End="-78.3333333333333,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5568022440393" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5568022440393"
                    Point2="0,21.5568022440393"
                    Point3="-4,21.5568022440393" />
                  <mssgle:LineSegment
                    End="-74.3333333333333,21.5568022440393" />
                  <mssgle:CubicBezierSegment
                    Point1="-74.3333333333333,21.5568022440393"
                    Point2="-78.3333333333333,21.5568022440393"
                    Point3="-78.3333333333333,25.5568022440393" />
                  <mssgle:LineSegment
                    End="-78.3333333333333,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="167,42"
          Id="Package\Get Data from CSV - ETL\Order by country 1"
          TopLeft="243,685.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 3]"
          TopLeft="227.666666666667,634.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72.3333333333334,51"
              Start="0,0"
              End="72.3333333333334,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5548772917271" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5548772917271"
                    Point2="0,25.5548772917271"
                    Point3="4,25.5548772917271" />
                  <mssgle:LineSegment
                    End="68.3333333333334,25.5548772917271" />
                  <mssgle:CubicBezierSegment
                    Point1="68.3333333333334,25.5548772917271"
                    Point2="72.3333333333334,25.5548772917271"
                    Point3="72.3333333333334,29.5548772917271" />
                  <mssgle:LineSegment
                    End="72.3333333333334,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="167,42"
          Id="Package\Get Data from CSV - ETL\Order by country 2"
          TopLeft="345,533.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 4]"
          TopLeft="426.5,490.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="170,42"
          Id="Package\Get Data from CSV - ETL\Get Subregion Data"
          TopLeft="531,607.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Aggregate Output 12]"
          TopLeft="616.25,649.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="129,42"
          Id="Package\Get Data from CSV - ETL\Merge Join"
          TopLeft="361,607.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output]"
          TopLeft="427,575.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output1]"
          TopLeft="353,685.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72.5,-36"
              Start="0,0"
              End="72.5,-28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.6049822064057" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.6049822064057"
                    Point2="0,-14.6049822064057"
                    Point3="4,-14.6049822064057" />
                  <mssgle:LineSegment
                    End="68.5,-14.6049822064057" />
                  <mssgle:CubicBezierSegment
                    Point1="68.5,-14.6049822064057"
                    Point2="72.5,-14.6049822064057"
                    Point3="72.5,-18.6049822064057" />
                  <mssgle:LineSegment
                    End="72.5,-28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Merge Join Output]"
          TopLeft="490,628.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="41,0"
              Start="0,0"
              End="33.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 12]"
          TopLeft="839.25,666.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="178,42"
          Id="Package\Get Data from CSV - ETL\Order by subregion 2"
          TopLeft="743,534.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 21]"
          TopLeft="835,624.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-48"
              Start="0,0"
              End="0,-40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="178,42"
          Id="Package\Get Data from CSV - ETL\Order by subregion 1"
          TopLeft="536,447.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 31]"
          TopLeft="496,469.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="40,0"
              Start="0,0"
              End="32.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="138,50"
          Id="Package\Get Data from CSV - ETL\Merge Join 1"
          TopLeft="763,446.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output2]"
          TopLeft="714,470.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49,0"
              Start="0,0"
              End="41.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output3]"
          TopLeft="832,534.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-38"
              Start="0,0"
              End="0,-30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="119,42"
          Id="Package\Get Data from CSV - ETL\Multicast"
          TopLeft="980.5,527.25" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Merge Join Output1]"
          TopLeft="853.666666666667,496.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="167.833333333333,30.5"
              Start="0,0"
              End="167.833333333333,23">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.2157829475673" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.2157829475673"
                    Point2="0,15.2157829475673"
                    Point3="4,15.2157829475673" />
                  <mssgle:LineSegment
                    End="163.833333333333,15.2157829475673" />
                  <mssgle:CubicBezierSegment
                    Point1="163.833333333333,15.2157829475673"
                    Point2="167.833333333333,15.2157829475673"
                    Point3="167.833333333333,19.2157829475673" />
                  <mssgle:LineSegment
                    End="167.833333333333,23" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="172,42"
          Id="Package\Get Data from CSV - ETL\Get Date Dimension"
          TopLeft="1758,280" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 13]"
          TopLeft="1372.5,300.875">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="385.5,0"
              Start="0,0"
              End="378,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="378,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="180,42"
          Id="Package\Get Data from CSV - ETL\Set uid for every date"
          TopLeft="1754,366" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Aggregate Output 13]"
          TopLeft="1844,322">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="144,42"
          Id="Package\Get Data from CSV - ETL\Separate date"
          TopLeft="1776,433" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Output 04]"
          TopLeft="1846,408">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,25"
              Start="0,0"
              End="0,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="124,42"
          Id="Package\Get Data from CSV - ETL\Date data"
          TopLeft="1786,518" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Derived Column Output]"
          TopLeft="1848,475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="143,42"
          Id="Package\Get Data from CSV - ETL\DateTable_db"
          TopLeft="1772,597" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 14]"
          TopLeft="1845.75,560">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="145,42"
          Id="Package\Get Data from CSV - ETL\Order by iso 2"
          TopLeft="980.5,448.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 22]"
          TopLeft="1055.75,527.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-36.5"
              Start="0,0"
              End="0,-29">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-29" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="145,42"
          Id="Package\Get Data from CSV - ETL\Order by iso 1"
          TopLeft="981.5,361.25" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 32]"
          TopLeft="1311,321.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-257,39.5"
              Start="0,0"
              End="-257,32">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.75"
                    Point2="0,19.75"
                    Point3="-4,19.75" />
                  <mssgle:LineSegment
                    End="-253,19.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-253,19.75"
                    Point2="-257,19.75"
                    Point3="-257,23.75" />
                  <mssgle:LineSegment
                    End="-257,32" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="138,42"
          Id="Package\Get Data from CSV - ETL\Merge Join 2"
          TopLeft="1175.25,406" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output4]"
          TopLeft="1126.5,382.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.75,39.0833333333333"
              Start="0,0"
              End="41.25,39.0833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.1766055045872,0" />
                  <mssgle:CubicBezierSegment
                    Point1="24.1766055045872,0"
                    Point2="28.1766055045872,0"
                    Point3="28.1766055045872,4" />
                  <mssgle:LineSegment
                    End="28.1766055045872,35.0833333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="28.1766055045872,35.0833333333333"
                    Point2="28.1766055045872,39.0833333333333"
                    Point3="32.1766055045872,39.0833333333333" />
                  <mssgle:LineSegment
                    End="41.25,39.0833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output5]"
          TopLeft="1125.5,469.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49.75,-37.0833333333333"
              Start="0,0"
              End="42.25,-37.0833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.7545871559633,0" />
                  <mssgle:CubicBezierSegment
                    Point1="24.7545871559633,0"
                    Point2="28.7545871559633,0"
                    Point3="28.7545871559633,-4" />
                  <mssgle:LineSegment
                    End="28.7545871559633,-33.0833333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="28.7545871559633,-33.0833333333333"
                    Point2="28.7545871559633,-37.0833333333333"
                    Point3="32.7545871559633,-37.0833333333333" />
                  <mssgle:LineSegment
                    End="42.25,-37.0833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="158,42"
          Id="Package\Get Data from CSV - ETL\Ordery by date 1"
          TopLeft="1536.25,363.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 41]"
          TopLeft="1330.16666666667,321.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="285.083333333333,42"
              Start="0,0"
              End="285.083333333333,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.123595505618" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.123595505618"
                    Point2="0,17.123595505618"
                    Point3="4,17.123595505618" />
                  <mssgle:LineSegment
                    End="281.083333333333,17.123595505618" />
                  <mssgle:CubicBezierSegment
                    Point1="281.083333333333,17.123595505618"
                    Point2="285.083333333333,17.123595505618"
                    Point3="285.083333333333,21.123595505618" />
                  <mssgle:LineSegment
                    End="285.083333333333,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="174,42"
          Id="Package\Get Data from CSV - ETL\Order by date 2"
          TopLeft="1535,447.5" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 23]"
          TopLeft="1828.66666666667,518">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.666666666667,-28.4999999999998"
              Start="0,0"
              End="-206.666666666667,-20.9999999999998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-7.6178343949044" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-7.6178343949044"
                    Point2="0,-11.6178343949044"
                    Point3="-4,-11.6178343949044" />
                  <mssgle:LineSegment
                    End="-202.666666666667,-11.6178343949044" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.666666666667,-11.6178343949044"
                    Point2="-206.666666666667,-11.6178343949044"
                    Point3="-206.666666666667,-15.6178343949044" />
                  <mssgle:LineSegment
                    End="-206.666666666667,-20.9999999999998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="138,42"
          Id="Package\Get Data from CSV - ETL\Merge Join 3"
          TopLeft="1348.75,406.25" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output6]"
          TopLeft="1536.25,384.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.5,36.8333333333333"
              Start="0,0"
              End="-42,36.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-24.6100917431193,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-24.6100917431193,0"
                    Point2="-28.6100917431193,0"
                    Point3="-28.6100917431193,4" />
                  <mssgle:LineSegment
                    End="-28.6100917431193,32.8333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-28.6100917431193,32.8333333333333"
                    Point2="-28.6100917431193,36.8333333333333"
                    Point3="-32.6100917431193,36.8333333333333" />
                  <mssgle:LineSegment
                    End="-42,36.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output7]"
          TopLeft="1535,468.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-48.25,-35.5833333333335"
              Start="0,0"
              End="-40.75,-35.5833333333335">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-23.8876146788991,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.8876146788991,0"
                    Point2="-27.8876146788991,0"
                    Point3="-27.8876146788991,-4" />
                  <mssgle:LineSegment
                    End="-27.8876146788991,-31.5833333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="-27.8876146788991,-31.5833333333335"
                    Point2="-27.8876146788991,-35.5833333333335"
                    Point3="-31.8876146788991,-35.5833333333335" />
                  <mssgle:LineSegment
                    End="-40.75,-35.5833333333335" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="140,42"
          Id="Package\Get Data from CSV - ETL\Order by id 1"
          TopLeft="1177.5,491.25" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Merge Join Output2]"
          TopLeft="1245.875,448">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.25"
              Start="0,0"
              End="0,35.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="140,42"
          Id="Package\Get Data from CSV - ETL\Order by id 2"
          TopLeft="1343.75,493.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Merge Join Output3]"
          TopLeft="1415.75,448.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.5"
              Start="0,0"
              End="0,38">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="124,42"
          Id="Package\Get Data from CSV - ETL\fact_table"
          TopLeft="1267.5,573.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output8]"
          TopLeft="1247.5,533.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.6666666666667,40.5000000000001"
              Start="0,0"
              End="62.6666666666667,33.0000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.9904458598726" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.9904458598726"
                    Point2="0,23.9904458598726"
                    Point3="4,23.9904458598726" />
                  <mssgle:LineSegment
                    End="58.6666666666667,23.9904458598726" />
                  <mssgle:CubicBezierSegment
                    Point1="58.6666666666667,23.9904458598726"
                    Point2="62.6666666666667,23.9904458598726"
                    Point3="62.6666666666667,27.9904458598726" />
                  <mssgle:LineSegment
                    End="62.6666666666667,33.0000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Sort Output9]"
          TopLeft="1413.75,535.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-64.9166666666667,38.0000000000001"
              Start="0,0"
              End="-64.9166666666667,30.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5095541401274" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5095541401274"
                    Point2="0,22.5095541401274"
                    Point3="-4,22.5095541401274" />
                  <mssgle:LineSegment
                    End="-60.9166666666667,22.5095541401274" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.9166666666667,22.5095541401274"
                    Point2="-64.9166666666667,22.5095541401274"
                    Point3="-64.9166666666667,26.5095541401274" />
                  <mssgle:LineSegment
                    End="-64.9166666666667,30.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="164,42"
          Id="Package\Get Data from CSV - ETL\Data Conversion 1"
          TopLeft="1222.5,89.75" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Data Conversion Output]"
          TopLeft="1307,131.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Flat File Source Output]"
          TopLeft="1306,43.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.5"
              Start="0,0"
              End="0,39">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="154,42"
          Id="Package\Get Data from CSV - ETL\RegionTable_db"
          TopLeft="969,625" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Multicast Output 33]"
          TopLeft="1043,569.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.75"
              Start="0,0"
              End="0,48.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,16.125,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="141,42"
          Id="Package\Get Data from CSV - ETL\FactTable_db"
          TopLeft="1253,663" />
        <EdgeLayout
          Id="Package\Get Data from CSV - ETL.Paths[Merge Join Output4]"
          TopLeft="1326.5,615.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.25"
              Start="0,0"
              End="0,39.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get Data from CSV - ETL\CountryTable_db">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Data from CSV - ETL\SubregionTable_db">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Data from CSV - ETL\DateTable_db">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Data from CSV - ETL\RegionTable_db">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Data from CSV - ETL\FactTable_db">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>